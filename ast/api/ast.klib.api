// Klib ABI Dump
// Targets: [iosArm64, iosSimulatorArm64, iosX64, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <io.github.charlietap.chasm:ast>
final enum class io.github.charlietap.chasm.ast.module/Version : kotlin/Enum<io.github.charlietap.chasm.ast.module/Version> { // io.github.charlietap.chasm.ast.module/Version|null[0]
    enum entry One // io.github.charlietap.chasm.ast.module/Version.One|null[0]

    final val entries // io.github.charlietap.chasm.ast.module/Version.entries|#static{}entries[0]
        final fun <get-entries>(): kotlin.enums/EnumEntries<io.github.charlietap.chasm.ast.module/Version> // io.github.charlietap.chasm.ast.module/Version.entries.<get-entries>|<get-entries>#static(){}[0]
    final val number // io.github.charlietap.chasm.ast.module/Version.number|{}number[0]
        final fun <get-number>(): kotlin/UByteArray // io.github.charlietap.chasm.ast.module/Version.number.<get-number>|<get-number>(){}[0]

    final fun valueOf(kotlin/String): io.github.charlietap.chasm.ast.module/Version // io.github.charlietap.chasm.ast.module/Version.valueOf|valueOf#static(kotlin.String){}[0]
    final fun values(): kotlin/Array<io.github.charlietap.chasm.ast.module/Version> // io.github.charlietap.chasm.ast.module/Version.values|values#static(){}[0]
}

sealed interface io.github.charlietap.chasm.ast.instruction/AggregateInstruction : io.github.charlietap.chasm.ast.instruction/Instruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction|null[0]
    final class ArrayCopy : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val destinationTypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.destinationTypeIndex|{}destinationTypeIndex[0]
            final fun <get-destinationTypeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.destinationTypeIndex.<get-destinationTypeIndex>|<get-destinationTypeIndex>(){}[0]
        final val sourceTypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.sourceTypeIndex|{}sourceTypeIndex[0]
            final fun <get-sourceTypeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.sourceTypeIndex.<get-sourceTypeIndex>|<get-sourceTypeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.TypeIndex = ...): io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayCopy.toString|toString(){}[0]
    }

    final class ArrayInitData : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.DataIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.DataIndex){}[0]

        final val dataIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.dataIndex|{}dataIndex[0]
            final fun <get-dataIndex>(): io.github.charlietap.chasm.ast.module/Index.DataIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.dataIndex.<get-dataIndex>|<get-dataIndex>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.DataIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.DataIndex = ...): io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.DataIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitData.toString|toString(){}[0]
    }

    final class ArrayInitElement : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.ElementIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.ElementIndex){}[0]

        final val elementIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.elementIndex|{}elementIndex[0]
            final fun <get-elementIndex>(): io.github.charlietap.chasm.ast.module/Index.ElementIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.elementIndex.<get-elementIndex>|<get-elementIndex>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.ElementIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.ElementIndex = ...): io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.ElementIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayInitElement.toString|toString(){}[0]
    }

    final class ArrayNewData : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.DataIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.DataIndex){}[0]

        final val dataIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.dataIndex|{}dataIndex[0]
            final fun <get-dataIndex>(): io.github.charlietap.chasm.ast.module/Index.DataIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.dataIndex.<get-dataIndex>|<get-dataIndex>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.DataIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.DataIndex = ...): io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.DataIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewData.toString|toString(){}[0]
    }

    final class ArrayNewElement : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.ElementIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.ElementIndex){}[0]

        final val elementIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.elementIndex|{}elementIndex[0]
            final fun <get-elementIndex>(): io.github.charlietap.chasm.ast.module/Index.ElementIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.elementIndex.<get-elementIndex>|<get-elementIndex>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.ElementIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.ElementIndex = ...): io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.ElementIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewElement.toString|toString(){}[0]
    }

    final class ArrayNewFixed : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, kotlin/UInt) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;kotlin.UInt){}[0]

        final val size // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.size|{}size[0]
            final fun <get-size>(): kotlin/UInt // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.size.<get-size>|<get-size>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.component1|component1(){}[0]
        final fun component2(): kotlin/UInt // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., kotlin/UInt = ...): io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;kotlin.UInt){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewFixed.toString|toString(){}[0]
    }

    final class StructGet : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.FieldIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.FieldIndex){}[0]

        final val fieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.fieldIndex|{}fieldIndex[0]
            final fun <get-fieldIndex>(): io.github.charlietap.chasm.ast.module/Index.FieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.fieldIndex.<get-fieldIndex>|<get-fieldIndex>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.FieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.FieldIndex = ...): io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.FieldIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGet.toString|toString(){}[0]
    }

    final class StructGetSigned : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.FieldIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.FieldIndex){}[0]

        final val fieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.fieldIndex|{}fieldIndex[0]
            final fun <get-fieldIndex>(): io.github.charlietap.chasm.ast.module/Index.FieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.fieldIndex.<get-fieldIndex>|<get-fieldIndex>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.FieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.FieldIndex = ...): io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.FieldIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetSigned.toString|toString(){}[0]
    }

    final class StructGetUnsigned : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.FieldIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.FieldIndex){}[0]

        final val fieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.fieldIndex|{}fieldIndex[0]
            final fun <get-fieldIndex>(): io.github.charlietap.chasm.ast.module/Index.FieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.fieldIndex.<get-fieldIndex>|<get-fieldIndex>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.FieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.FieldIndex = ...): io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.FieldIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructGetUnsigned.toString|toString(){}[0]
    }

    final class StructSet : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.FieldIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.FieldIndex){}[0]

        final val fieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.fieldIndex|{}fieldIndex[0]
            final fun <get-fieldIndex>(): io.github.charlietap.chasm.ast.module/Index.FieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.fieldIndex.<get-fieldIndex>|<get-fieldIndex>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.FieldIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.FieldIndex = ...): io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.FieldIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructSet.toString|toString(){}[0]
    }

    final value class ArrayFill : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayFill|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayFill.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayFill.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayFill.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayFill.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayFill.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayFill.toString|toString(){}[0]
    }

    final value class ArrayGet : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGet|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGet.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGet.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGet.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGet.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGet.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGet.toString|toString(){}[0]
    }

    final value class ArrayGetSigned : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetSigned|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetSigned.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetSigned.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetSigned.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetSigned.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetSigned.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetSigned.toString|toString(){}[0]
    }

    final value class ArrayGetUnsigned : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetUnsigned|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetUnsigned.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetUnsigned.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetUnsigned.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetUnsigned.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetUnsigned.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayGetUnsigned.toString|toString(){}[0]
    }

    final value class ArrayNew : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNew|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNew.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNew.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNew.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNew.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNew.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNew.toString|toString(){}[0]
    }

    final value class ArrayNewDefault : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewDefault|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewDefault.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewDefault.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewDefault.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewDefault.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewDefault.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayNewDefault.toString|toString(){}[0]
    }

    final value class ArraySet : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArraySet|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArraySet.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArraySet.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArraySet.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArraySet.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArraySet.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArraySet.toString|toString(){}[0]
    }

    final value class StructNew : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNew|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNew.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNew.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNew.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNew.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNew.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNew.toString|toString(){}[0]
    }

    final value class StructNewDefault : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNewDefault|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNewDefault.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNewDefault.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNewDefault.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNewDefault.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNewDefault.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.StructNewDefault.toString|toString(){}[0]
    }

    final object AnyConvertExtern : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.AnyConvertExtern|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.AnyConvertExtern.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.AnyConvertExtern.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.AnyConvertExtern.toString|toString(){}[0]
    }

    final object ArrayLen : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayLen|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayLen.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayLen.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ArrayLen.toString|toString(){}[0]
    }

    final object ExternConvertAny : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ExternConvertAny|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ExternConvertAny.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ExternConvertAny.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.ExternConvertAny.toString|toString(){}[0]
    }

    final object I31GetSigned : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.I31GetSigned|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.I31GetSigned.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.I31GetSigned.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.I31GetSigned.toString|toString(){}[0]
    }

    final object I31GetUnsigned : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.I31GetUnsigned|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.I31GetUnsigned.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.I31GetUnsigned.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.I31GetUnsigned.toString|toString(){}[0]
    }

    final object RefI31 : io.github.charlietap.chasm.ast.instruction/AggregateInstruction { // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.RefI31|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.RefI31.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.RefI31.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AggregateInstruction.RefI31.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction : io.github.charlietap.chasm.ast.instruction/Instruction { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction|null[0]
    sealed interface CompareExchange : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange|null[0]
        abstract val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.memArg|{}memArg[0]
            abstract fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.memArg.<get-memArg>|<get-memArg>(){}[0]
        abstract val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.memoryIndex|{}memoryIndex[0]
            abstract fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        sealed interface I32 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32|null[0]
            final class I32CompareExchange : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange.toString|toString(){}[0]
            }

            final class I32CompareExchange16 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16 // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange16.toString|toString(){}[0]
            }

            final class I32CompareExchange8 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8 // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I32.I32CompareExchange8.toString|toString(){}[0]
            }
        }

        sealed interface I64 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64|null[0]
            final class I64CompareExchange : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange.toString|toString(){}[0]
            }

            final class I64CompareExchange16 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16 // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange16.toString|toString(){}[0]
            }

            final class I64CompareExchange32 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32 // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange32.toString|toString(){}[0]
            }

            final class I64CompareExchange8 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8 // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.CompareExchange.I64.I64CompareExchange8.toString|toString(){}[0]
            }
        }
    }

    sealed interface Load : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load|null[0]
        abstract val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.memArg|{}memArg[0]
            abstract fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.memArg.<get-memArg>|<get-memArg>(){}[0]
        abstract val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.memoryIndex|{}memoryIndex[0]
            abstract fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        sealed interface I32 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32|null[0]
            final class I32Load : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load.toString|toString(){}[0]
            }

            final class I32Load16U : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load16U.toString|toString(){}[0]
            }

            final class I32Load8U : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I32.I32Load8U.toString|toString(){}[0]
            }
        }

        sealed interface I64 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64|null[0]
            final class I64Load : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load.toString|toString(){}[0]
            }

            final class I64Load16U : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load16U.toString|toString(){}[0]
            }

            final class I64Load32U : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load32U.toString|toString(){}[0]
            }

            final class I64Load8U : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Load.I64.I64Load8U.toString|toString(){}[0]
            }
        }
    }

    sealed interface ReadModifyWrite : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite|null[0]
        abstract val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.memArg|{}memArg[0]
            abstract fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.memArg.<get-memArg>|<get-memArg>(){}[0]
        abstract val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.memoryIndex|{}memoryIndex[0]
            abstract fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        sealed interface I32 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32|null[0]
            final class I32ReadModifyWrite16Add : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Add.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite16And : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16And.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite16Exchange : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Exchange.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite16Or : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Or.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite16Sub : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Sub.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite16Xor : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite16Xor.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite8Add : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Add.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite8And : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8And.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite8Exchange : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Exchange.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite8Or : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Or.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite8Sub : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Sub.toString|toString(){}[0]
            }

            final class I32ReadModifyWrite8Xor : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWrite8Xor.toString|toString(){}[0]
            }

            final class I32ReadModifyWriteAdd : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAdd.toString|toString(){}[0]
            }

            final class I32ReadModifyWriteAnd : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteAnd.toString|toString(){}[0]
            }

            final class I32ReadModifyWriteExchange : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteExchange.toString|toString(){}[0]
            }

            final class I32ReadModifyWriteOr : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteOr.toString|toString(){}[0]
            }

            final class I32ReadModifyWriteSub : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteSub.toString|toString(){}[0]
            }

            final class I32ReadModifyWriteXor : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I32.I32ReadModifyWriteXor.toString|toString(){}[0]
            }
        }

        sealed interface I64 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64|null[0]
            final class I64ReadModifyWrite16Add : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Add.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite16And : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16And.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite16Exchange : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Exchange.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite16Or : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Or.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite16Sub : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Sub.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite16Xor : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite16Xor.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite32Add : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Add.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite32And : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32And.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite32Exchange : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Exchange.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite32Or : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Or.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite32Sub : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Sub.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite32Xor : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite32Xor.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite8Add : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Add.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite8And : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8And.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite8Exchange : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Exchange.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite8Or : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Or.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite8Sub : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Sub.toString|toString(){}[0]
            }

            final class I64ReadModifyWrite8Xor : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWrite8Xor.toString|toString(){}[0]
            }

            final class I64ReadModifyWriteAdd : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAdd.toString|toString(){}[0]
            }

            final class I64ReadModifyWriteAnd : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteAnd.toString|toString(){}[0]
            }

            final class I64ReadModifyWriteExchange : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteExchange.toString|toString(){}[0]
            }

            final class I64ReadModifyWriteOr : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteOr.toString|toString(){}[0]
            }

            final class I64ReadModifyWriteSub : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteSub.toString|toString(){}[0]
            }

            final class I64ReadModifyWriteXor : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.ReadModifyWrite.I64.I64ReadModifyWriteXor.toString|toString(){}[0]
            }
        }
    }

    sealed interface Store : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store|null[0]
        abstract val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.memArg|{}memArg[0]
            abstract fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.memArg.<get-memArg>|<get-memArg>(){}[0]
        abstract val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.memoryIndex|{}memoryIndex[0]
            abstract fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        sealed interface I32 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32|null[0]
            final class I32Store : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store.toString|toString(){}[0]
            }

            final class I32Store16 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16 // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store16.toString|toString(){}[0]
            }

            final class I32Store8 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8 // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I32.I32Store8.toString|toString(){}[0]
            }
        }

        sealed interface I64 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64|null[0]
            final class I64Store : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store.toString|toString(){}[0]
            }

            final class I64Store16 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16 // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store16.toString|toString(){}[0]
            }

            final class I64Store32 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32 // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store32.toString|toString(){}[0]
            }

            final class I64Store8 : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64 { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8|null[0]
                constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

                final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.memArg|{}memArg[0]
                    final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.memArg.<get-memArg>|<get-memArg>(){}[0]
                final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.memoryIndex|{}memoryIndex[0]
                    final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

                final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.component1|component1(){}[0]
                final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.component2|component2(){}[0]
                final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8 // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
                final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.equals|equals(kotlin.Any?){}[0]
                final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.hashCode|hashCode(){}[0]
                final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Store.I64.I64Store8.toString|toString(){}[0]
            }
        }
    }

    final class I32Wait : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

        final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.memArg.<get-memArg>|<get-memArg>(){}[0]
        final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.memoryIndex|{}memoryIndex[0]
            final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I32Wait.toString|toString(){}[0]
    }

    final class I64Wait : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

        final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.memArg.<get-memArg>|<get-memArg>(){}[0]
        final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.memoryIndex|{}memoryIndex[0]
            final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.I64Wait.toString|toString(){}[0]
    }

    final class Notify : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

        final val memArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.memArg.<get-memArg>|<get-memArg>(){}[0]
        final val memoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.memoryIndex|{}memoryIndex[0]
            final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Notify.toString|toString(){}[0]
    }

    final object Fence : io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction { // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Fence|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Fence.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Fence.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/AtomicMemoryInstruction.Fence.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.instruction/ControlInstruction : io.github.charlietap.chasm.ast.instruction/Instruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction|null[0]
    sealed interface CatchHandler { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler|null[0]
        abstract val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.labelIndex|{}labelIndex[0]
            abstract fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]

        final class Catch : io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.TagIndex, io.github.charlietap.chasm.ast.module/Index.LabelIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TagIndex;io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]

            final val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.labelIndex|{}labelIndex[0]
                final fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]
            final val tagIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.tagIndex|{}tagIndex[0]
                final fun <get-tagIndex>(): io.github.charlietap.chasm.ast.module/Index.TagIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.tagIndex.<get-tagIndex>|<get-tagIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.TagIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.TagIndex = ..., io.github.charlietap.chasm.ast.module/Index.LabelIndex = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.copy|copy(io.github.charlietap.chasm.ast.module.Index.TagIndex;io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.Catch.toString|toString(){}[0]
        }

        final class CatchRef : io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.TagIndex, io.github.charlietap.chasm.ast.module/Index.LabelIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TagIndex;io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]

            final val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.labelIndex|{}labelIndex[0]
                final fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]
            final val tagIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.tagIndex|{}tagIndex[0]
                final fun <get-tagIndex>(): io.github.charlietap.chasm.ast.module/Index.TagIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.tagIndex.<get-tagIndex>|<get-tagIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.TagIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.TagIndex = ..., io.github.charlietap.chasm.ast.module/Index.LabelIndex = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.copy|copy(io.github.charlietap.chasm.ast.module.Index.TagIndex;io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchRef.toString|toString(){}[0]
        }

        final value class CatchAll : io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAll|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.LabelIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAll.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]

            final val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAll.labelIndex|{}labelIndex[0]
                final fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAll.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAll.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAll.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAll.toString|toString(){}[0]
        }

        final value class CatchAllRef : io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAllRef|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.LabelIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAllRef.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]

            final val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAllRef.labelIndex|{}labelIndex[0]
                final fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAllRef.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAllRef.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAllRef.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler.CatchAllRef.toString|toString(){}[0]
        }
    }

    final class Block : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block|null[0]
        constructor <init>(io.github.charlietap.chasm.type/BlockType, kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction>) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.<init>|<init>(io.github.charlietap.chasm.type.BlockType;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>){}[0]

        final val blockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.blockType|{}blockType[0]
            final fun <get-blockType>(): io.github.charlietap.chasm.type/BlockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.blockType.<get-blockType>|<get-blockType>(){}[0]
        final val instructions // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.instructions|{}instructions[0]
            final fun <get-instructions>(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.instructions.<get-instructions>|<get-instructions>(){}[0]

        final fun component1(): io.github.charlietap.chasm.type/BlockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.component1|component1(){}[0]
        final fun component2(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.type/BlockType = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.copy|copy(io.github.charlietap.chasm.type.BlockType;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Block.toString|toString(){}[0]
    }

    final class BrOnCast : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.LabelIndex, io.github.charlietap.chasm.type/ReferenceType, io.github.charlietap.chasm.type/ReferenceType) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LabelIndex;io.github.charlietap.chasm.type.ReferenceType;io.github.charlietap.chasm.type.ReferenceType){}[0]

        final val dstReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.dstReferenceType|{}dstReferenceType[0]
            final fun <get-dstReferenceType>(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.dstReferenceType.<get-dstReferenceType>|<get-dstReferenceType>(){}[0]
        final val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.labelIndex|{}labelIndex[0]
            final fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]
        final val srcReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.srcReferenceType|{}srcReferenceType[0]
            final fun <get-srcReferenceType>(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.srcReferenceType.<get-srcReferenceType>|<get-srcReferenceType>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.component2|component2(){}[0]
        final fun component3(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.component3|component3(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.LabelIndex = ..., io.github.charlietap.chasm.type/ReferenceType = ..., io.github.charlietap.chasm.type/ReferenceType = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.copy|copy(io.github.charlietap.chasm.ast.module.Index.LabelIndex;io.github.charlietap.chasm.type.ReferenceType;io.github.charlietap.chasm.type.ReferenceType){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCast.toString|toString(){}[0]
    }

    final class BrOnCastFail : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.LabelIndex, io.github.charlietap.chasm.type/ReferenceType, io.github.charlietap.chasm.type/ReferenceType) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LabelIndex;io.github.charlietap.chasm.type.ReferenceType;io.github.charlietap.chasm.type.ReferenceType){}[0]

        final val dstReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.dstReferenceType|{}dstReferenceType[0]
            final fun <get-dstReferenceType>(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.dstReferenceType.<get-dstReferenceType>|<get-dstReferenceType>(){}[0]
        final val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.labelIndex|{}labelIndex[0]
            final fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]
        final val srcReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.srcReferenceType|{}srcReferenceType[0]
            final fun <get-srcReferenceType>(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.srcReferenceType.<get-srcReferenceType>|<get-srcReferenceType>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.component2|component2(){}[0]
        final fun component3(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.component3|component3(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.LabelIndex = ..., io.github.charlietap.chasm.type/ReferenceType = ..., io.github.charlietap.chasm.type/ReferenceType = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.copy|copy(io.github.charlietap.chasm.ast.module.Index.LabelIndex;io.github.charlietap.chasm.type.ReferenceType;io.github.charlietap.chasm.type.ReferenceType){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnCastFail.toString|toString(){}[0]
    }

    final class BrTable : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable|null[0]
        constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/Index.LabelIndex>, io.github.charlietap.chasm.ast.module/Index.LabelIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.Index.LabelIndex>;io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]

        final val defaultLabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.defaultLabelIndex|{}defaultLabelIndex[0]
            final fun <get-defaultLabelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.defaultLabelIndex.<get-defaultLabelIndex>|<get-defaultLabelIndex>(){}[0]
        final val labelIndices // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.labelIndices|{}labelIndices[0]
            final fun <get-labelIndices>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Index.LabelIndex> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.labelIndices.<get-labelIndices>|<get-labelIndices>(){}[0]

        final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Index.LabelIndex> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.component2|component2(){}[0]
        final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/Index.LabelIndex> = ..., io.github.charlietap.chasm.ast.module/Index.LabelIndex = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.Index.LabelIndex>;io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrTable.toString|toString(){}[0]
    }

    final class CallIndirect : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.TableIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]

        final val tableIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.tableIndex|{}tableIndex[0]
            final fun <get-tableIndex>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.tableIndex.<get-tableIndex>|<get-tableIndex>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.TableIndex = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallIndirect.toString|toString(){}[0]
    }

    final class If : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If|null[0]
        constructor <init>(io.github.charlietap.chasm.type/BlockType, kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction>, kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction>?) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.<init>|<init>(io.github.charlietap.chasm.type.BlockType;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>?){}[0]

        final val blockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.blockType|{}blockType[0]
            final fun <get-blockType>(): io.github.charlietap.chasm.type/BlockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.blockType.<get-blockType>|<get-blockType>(){}[0]
        final val elseInstructions // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.elseInstructions|{}elseInstructions[0]
            final fun <get-elseInstructions>(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction>? // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.elseInstructions.<get-elseInstructions>|<get-elseInstructions>(){}[0]
        final val thenInstructions // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.thenInstructions|{}thenInstructions[0]
            final fun <get-thenInstructions>(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.thenInstructions.<get-thenInstructions>|<get-thenInstructions>(){}[0]

        final fun component1(): io.github.charlietap.chasm.type/BlockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.component1|component1(){}[0]
        final fun component2(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.component2|component2(){}[0]
        final fun component3(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction>? // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.component3|component3(){}[0]
        final fun copy(io.github.charlietap.chasm.type/BlockType = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction>? = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.If // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.copy|copy(io.github.charlietap.chasm.type.BlockType;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>?){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.If.toString|toString(){}[0]
    }

    final class Loop : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop|null[0]
        constructor <init>(io.github.charlietap.chasm.type/BlockType, kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction>) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.<init>|<init>(io.github.charlietap.chasm.type.BlockType;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>){}[0]

        final val blockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.blockType|{}blockType[0]
            final fun <get-blockType>(): io.github.charlietap.chasm.type/BlockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.blockType.<get-blockType>|<get-blockType>(){}[0]
        final val instructions // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.instructions|{}instructions[0]
            final fun <get-instructions>(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.instructions.<get-instructions>|<get-instructions>(){}[0]

        final fun component1(): io.github.charlietap.chasm.type/BlockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.component1|component1(){}[0]
        final fun component2(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.type/BlockType = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.copy|copy(io.github.charlietap.chasm.type.BlockType;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Loop.toString|toString(){}[0]
    }

    final class ReturnCallIndirect : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.ast.module/Index.TableIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]

        final val tableIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.tableIndex|{}tableIndex[0]
            final fun <get-tableIndex>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.tableIndex.<get-tableIndex>|<get-tableIndex>(){}[0]
        final val typeIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.ast.module/Index.TableIndex = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallIndirect.toString|toString(){}[0]
    }

    final class TryTable : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable|null[0]
        constructor <init>(io.github.charlietap.chasm.type/BlockType, kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler>, kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction>) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.<init>|<init>(io.github.charlietap.chasm.type.BlockType;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.ControlInstruction.CatchHandler>;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>){}[0]

        final val blockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.blockType|{}blockType[0]
            final fun <get-blockType>(): io.github.charlietap.chasm.type/BlockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.blockType.<get-blockType>|<get-blockType>(){}[0]
        final val handlers // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.handlers|{}handlers[0]
            final fun <get-handlers>(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.handlers.<get-handlers>|<get-handlers>(){}[0]
        final val instructions // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.instructions|{}instructions[0]
            final fun <get-instructions>(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.instructions.<get-instructions>|<get-instructions>(){}[0]

        final fun component1(): io.github.charlietap.chasm.type/BlockType // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.component1|component1(){}[0]
        final fun component2(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.component2|component2(){}[0]
        final fun component3(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.component3|component3(){}[0]
        final fun copy(io.github.charlietap.chasm.type/BlockType = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/ControlInstruction.CatchHandler> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> = ...): io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.copy|copy(io.github.charlietap.chasm.type.BlockType;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.ControlInstruction.CatchHandler>;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.TryTable.toString|toString(){}[0]
    }

    final value class Br : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Br|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.LabelIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Br.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]

        final val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Br.labelIndex|{}labelIndex[0]
            final fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Br.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Br.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Br.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Br.toString|toString(){}[0]
    }

    final value class BrIf : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrIf|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.LabelIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrIf.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]

        final val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrIf.labelIndex|{}labelIndex[0]
            final fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrIf.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrIf.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrIf.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrIf.toString|toString(){}[0]
    }

    final value class BrOnNonNull : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNonNull|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.LabelIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNonNull.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]

        final val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNonNull.labelIndex|{}labelIndex[0]
            final fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNonNull.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNonNull.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNonNull.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNonNull.toString|toString(){}[0]
    }

    final value class BrOnNull : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNull|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.LabelIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNull.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LabelIndex){}[0]

        final val labelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNull.labelIndex|{}labelIndex[0]
            final fun <get-labelIndex>(): io.github.charlietap.chasm.ast.module/Index.LabelIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNull.labelIndex.<get-labelIndex>|<get-labelIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNull.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNull.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.BrOnNull.toString|toString(){}[0]
    }

    final value class Call : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Call|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.FunctionIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Call.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.FunctionIndex){}[0]

        final val functionIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Call.functionIndex|{}functionIndex[0]
            final fun <get-functionIndex>(): io.github.charlietap.chasm.ast.module/Index.FunctionIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Call.functionIndex.<get-functionIndex>|<get-functionIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Call.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Call.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Call.toString|toString(){}[0]
    }

    final value class CallRef : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallRef|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallRef.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallRef.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallRef.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallRef.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallRef.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.CallRef.toString|toString(){}[0]
    }

    final value class ReturnCall : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCall|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.FunctionIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCall.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.FunctionIndex){}[0]

        final val functionIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCall.functionIndex|{}functionIndex[0]
            final fun <get-functionIndex>(): io.github.charlietap.chasm.ast.module/Index.FunctionIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCall.functionIndex.<get-functionIndex>|<get-functionIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCall.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCall.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCall.toString|toString(){}[0]
    }

    final value class ReturnCallRef : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallRef|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallRef.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex){}[0]

        final val typeIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallRef.typeIndex|{}typeIndex[0]
            final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallRef.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallRef.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallRef.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ReturnCallRef.toString|toString(){}[0]
    }

    final value class Throw : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Throw|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TagIndex) // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Throw.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TagIndex){}[0]

        final val tagIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Throw.tagIndex|{}tagIndex[0]
            final fun <get-tagIndex>(): io.github.charlietap.chasm.ast.module/Index.TagIndex // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Throw.tagIndex.<get-tagIndex>|<get-tagIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Throw.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Throw.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Throw.toString|toString(){}[0]
    }

    final object Nop : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Nop|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Nop.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Nop.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Nop.toString|toString(){}[0]
    }

    final object Return : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Return|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Return.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Return.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Return.toString|toString(){}[0]
    }

    final object ThrowRef : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ThrowRef|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ThrowRef.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ThrowRef.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.ThrowRef.toString|toString(){}[0]
    }

    final object Unreachable : io.github.charlietap.chasm.ast.instruction/ControlInstruction { // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Unreachable|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Unreachable.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Unreachable.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ControlInstruction.Unreachable.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.instruction/Instruction // io.github.charlietap.chasm.ast.instruction/Instruction|null[0]

sealed interface io.github.charlietap.chasm.ast.instruction/MemoryInstruction : io.github.charlietap.chasm.ast.instruction/Instruction { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction|null[0]
    sealed interface Load : io.github.charlietap.chasm.ast.instruction/MemoryInstruction { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load|null[0]
        abstract val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.memArg|{}memArg[0]
            abstract fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.memArg.<get-memArg>|<get-memArg>(){}[0]
        abstract val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.memoryIndex|{}memoryIndex[0]
            abstract fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        final class F32Load : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F32Load.toString|toString(){}[0]
        }

        final class F64Load : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.F64Load.toString|toString(){}[0]
        }

        final class I32Load : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load.toString|toString(){}[0]
        }

        final class I32Load16S : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16S.toString|toString(){}[0]
        }

        final class I32Load16U : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load16U.toString|toString(){}[0]
        }

        final class I32Load8S : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8S.toString|toString(){}[0]
        }

        final class I32Load8U : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I32Load8U.toString|toString(){}[0]
        }

        final class I64Load : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load.toString|toString(){}[0]
        }

        final class I64Load16S : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16S.toString|toString(){}[0]
        }

        final class I64Load16U : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load16U.toString|toString(){}[0]
        }

        final class I64Load32S : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32S.toString|toString(){}[0]
        }

        final class I64Load32U : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load32U.toString|toString(){}[0]
        }

        final class I64Load8S : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8S.toString|toString(){}[0]
        }

        final class I64Load8U : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Load.I64Load8U.toString|toString(){}[0]
        }
    }

    sealed interface Store : io.github.charlietap.chasm.ast.instruction/MemoryInstruction { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store|null[0]
        abstract val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.memArg|{}memArg[0]
            abstract fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.memArg.<get-memArg>|<get-memArg>(){}[0]
        abstract val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.memoryIndex|{}memoryIndex[0]
            abstract fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        final class F32Store : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F32Store.toString|toString(){}[0]
        }

        final class F64Store : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.F64Store.toString|toString(){}[0]
        }

        final class I32Store : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store.toString|toString(){}[0]
        }

        final class I32Store16 : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16 // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store16.toString|toString(){}[0]
        }

        final class I32Store8 : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8 // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I32Store8.toString|toString(){}[0]
        }

        final class I64Store : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store.toString|toString(){}[0]
        }

        final class I64Store16 : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16 // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store16.toString|toString(){}[0]
        }

        final class I64Store32 : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32 // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store32.toString|toString(){}[0]
        }

        final class I64Store8 : io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

            final val memArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.memArg|{}memArg[0]
                final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.memArg.<get-memArg>|<get-memArg>(){}[0]
            final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/MemArg = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8 // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.MemArg){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.Store.I64Store8.toString|toString(){}[0]
        }
    }

    final class MemoryCopy : io.github.charlietap.chasm.ast.instruction/MemoryInstruction { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.module/Index.MemoryIndex) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.module.Index.MemoryIndex){}[0]

        final val dstIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.dstIndex|{}dstIndex[0]
            final fun <get-dstIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.dstIndex.<get-dstIndex>|<get-dstIndex>(){}[0]
        final val srcIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.srcIndex|{}srcIndex[0]
            final fun <get-srcIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.srcIndex.<get-srcIndex>|<get-srcIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.module.Index.MemoryIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryCopy.toString|toString(){}[0]
    }

    final class MemoryInit : io.github.charlietap.chasm.ast.instruction/MemoryInstruction { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.module/Index.DataIndex) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.module.Index.DataIndex){}[0]

        final val dataIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.dataIndex|{}dataIndex[0]
            final fun <get-dataIndex>(): io.github.charlietap.chasm.ast.module/Index.DataIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.dataIndex.<get-dataIndex>|<get-dataIndex>(){}[0]
        final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.memoryIndex|{}memoryIndex[0]
            final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.DataIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.module/Index.DataIndex = ...): io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.module.Index.DataIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryInit.toString|toString(){}[0]
    }

    final value class DataDrop : io.github.charlietap.chasm.ast.instruction/MemoryInstruction { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.DataDrop|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.DataIndex) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.DataDrop.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.DataIndex){}[0]

        final val dataIdx // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.DataDrop.dataIdx|{}dataIdx[0]
            final fun <get-dataIdx>(): io.github.charlietap.chasm.ast.module/Index.DataIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.DataDrop.dataIdx.<get-dataIdx>|<get-dataIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.DataDrop.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.DataDrop.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.DataDrop.toString|toString(){}[0]
    }

    final value class MemoryFill : io.github.charlietap.chasm.ast.instruction/MemoryInstruction { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryFill|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryFill.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex){}[0]

        final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryFill.memoryIndex|{}memoryIndex[0]
            final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryFill.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryFill.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryFill.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryFill.toString|toString(){}[0]
    }

    final value class MemoryGrow : io.github.charlietap.chasm.ast.instruction/MemoryInstruction { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryGrow|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryGrow.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex){}[0]

        final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryGrow.memoryIndex|{}memoryIndex[0]
            final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryGrow.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryGrow.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryGrow.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemoryGrow.toString|toString(){}[0]
    }

    final value class MemorySize : io.github.charlietap.chasm.ast.instruction/MemoryInstruction { // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemorySize|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex) // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemorySize.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex){}[0]

        final val memoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemorySize.memoryIndex|{}memoryIndex[0]
            final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemorySize.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemorySize.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemorySize.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemoryInstruction.MemorySize.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.instruction/NumericInstruction : io.github.charlietap.chasm.ast.instruction/Instruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction|null[0]
    final class F32Const : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const|null[0]
        constructor <init>(kotlin/Float, kotlin/Int) // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.<init>|<init>(kotlin.Float;kotlin.Int){}[0]

        final val bits // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.bits|{}bits[0]
            final fun <get-bits>(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.bits.<get-bits>|<get-bits>(){}[0]
        final val value // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.value|{}value[0]
            final fun <get-value>(): kotlin/Float // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.value.<get-value>|<get-value>(){}[0]

        final fun component1(): kotlin/Float // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.component1|component1(){}[0]
        final fun component2(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.component2|component2(){}[0]
        final fun copy(kotlin/Float = ..., kotlin/Int = ...): io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.copy|copy(kotlin.Float;kotlin.Int){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Const.toString|toString(){}[0]
    }

    final class F64Const : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const|null[0]
        constructor <init>(kotlin/Double, kotlin/Long) // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.<init>|<init>(kotlin.Double;kotlin.Long){}[0]

        final val bits // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.bits|{}bits[0]
            final fun <get-bits>(): kotlin/Long // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.bits.<get-bits>|<get-bits>(){}[0]
        final val value // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.value|{}value[0]
            final fun <get-value>(): kotlin/Double // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.value.<get-value>|<get-value>(){}[0]

        final fun component1(): kotlin/Double // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.component1|component1(){}[0]
        final fun component2(): kotlin/Long // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.component2|component2(){}[0]
        final fun copy(kotlin/Double = ..., kotlin/Long = ...): io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.copy|copy(kotlin.Double;kotlin.Long){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Const.toString|toString(){}[0]
    }

    final value class I32Const : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Const|null[0]
        constructor <init>(kotlin/Int) // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Const.<init>|<init>(kotlin.Int){}[0]

        final val value // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Const.value|{}value[0]
            final fun <get-value>(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Const.value.<get-value>|<get-value>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Const.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Const.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Const.toString|toString(){}[0]
    }

    final value class I64Const : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Const|null[0]
        constructor <init>(kotlin/Long) // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Const.<init>|<init>(kotlin.Long){}[0]

        final val value // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Const.value|{}value[0]
            final fun <get-value>(): kotlin/Long // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Const.value.<get-value>|<get-value>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Const.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Const.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Const.toString|toString(){}[0]
    }

    final object F32Abs : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Abs|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Abs.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Abs.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Abs.toString|toString(){}[0]
    }

    final object F32Add : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Add|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Add.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Add.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Add.toString|toString(){}[0]
    }

    final object F32Ceil : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ceil|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ceil.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ceil.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ceil.toString|toString(){}[0]
    }

    final object F32ConvertI32S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI32S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI32S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI32S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI32S.toString|toString(){}[0]
    }

    final object F32ConvertI32U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI32U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI32U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI32U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI32U.toString|toString(){}[0]
    }

    final object F32ConvertI64S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI64S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI64S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI64S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI64S.toString|toString(){}[0]
    }

    final object F32ConvertI64U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI64U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI64U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI64U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ConvertI64U.toString|toString(){}[0]
    }

    final object F32Copysign : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Copysign|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Copysign.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Copysign.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Copysign.toString|toString(){}[0]
    }

    final object F32DemoteF64 : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32DemoteF64|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32DemoteF64.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32DemoteF64.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32DemoteF64.toString|toString(){}[0]
    }

    final object F32Div : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Div|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Div.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Div.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Div.toString|toString(){}[0]
    }

    final object F32Eq : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Eq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Eq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Eq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Eq.toString|toString(){}[0]
    }

    final object F32Floor : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Floor|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Floor.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Floor.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Floor.toString|toString(){}[0]
    }

    final object F32Ge : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ge|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ge.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ge.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ge.toString|toString(){}[0]
    }

    final object F32Gt : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Gt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Gt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Gt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Gt.toString|toString(){}[0]
    }

    final object F32Le : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Le|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Le.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Le.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Le.toString|toString(){}[0]
    }

    final object F32Lt : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Lt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Lt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Lt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Lt.toString|toString(){}[0]
    }

    final object F32Max : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Max|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Max.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Max.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Max.toString|toString(){}[0]
    }

    final object F32Min : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Min|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Min.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Min.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Min.toString|toString(){}[0]
    }

    final object F32Mul : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Mul|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Mul.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Mul.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Mul.toString|toString(){}[0]
    }

    final object F32Ne : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ne|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ne.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ne.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Ne.toString|toString(){}[0]
    }

    final object F32Nearest : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Nearest|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Nearest.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Nearest.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Nearest.toString|toString(){}[0]
    }

    final object F32Neg : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Neg|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Neg.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Neg.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Neg.toString|toString(){}[0]
    }

    final object F32ReinterpretI32 : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ReinterpretI32|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ReinterpretI32.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ReinterpretI32.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32ReinterpretI32.toString|toString(){}[0]
    }

    final object F32Sqrt : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Sqrt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Sqrt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Sqrt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Sqrt.toString|toString(){}[0]
    }

    final object F32Sub : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Sub|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Sub.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Sub.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Sub.toString|toString(){}[0]
    }

    final object F32Trunc : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Trunc|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Trunc.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Trunc.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F32Trunc.toString|toString(){}[0]
    }

    final object F64Abs : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Abs|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Abs.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Abs.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Abs.toString|toString(){}[0]
    }

    final object F64Add : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Add|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Add.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Add.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Add.toString|toString(){}[0]
    }

    final object F64Ceil : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ceil|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ceil.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ceil.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ceil.toString|toString(){}[0]
    }

    final object F64ConvertI32S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI32S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI32S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI32S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI32S.toString|toString(){}[0]
    }

    final object F64ConvertI32U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI32U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI32U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI32U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI32U.toString|toString(){}[0]
    }

    final object F64ConvertI64S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI64S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI64S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI64S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI64S.toString|toString(){}[0]
    }

    final object F64ConvertI64U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI64U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI64U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI64U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ConvertI64U.toString|toString(){}[0]
    }

    final object F64Copysign : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Copysign|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Copysign.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Copysign.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Copysign.toString|toString(){}[0]
    }

    final object F64Div : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Div|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Div.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Div.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Div.toString|toString(){}[0]
    }

    final object F64Eq : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Eq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Eq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Eq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Eq.toString|toString(){}[0]
    }

    final object F64Floor : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Floor|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Floor.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Floor.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Floor.toString|toString(){}[0]
    }

    final object F64Ge : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ge|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ge.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ge.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ge.toString|toString(){}[0]
    }

    final object F64Gt : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Gt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Gt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Gt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Gt.toString|toString(){}[0]
    }

    final object F64Le : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Le|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Le.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Le.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Le.toString|toString(){}[0]
    }

    final object F64Lt : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Lt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Lt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Lt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Lt.toString|toString(){}[0]
    }

    final object F64Max : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Max|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Max.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Max.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Max.toString|toString(){}[0]
    }

    final object F64Min : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Min|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Min.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Min.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Min.toString|toString(){}[0]
    }

    final object F64Mul : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Mul|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Mul.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Mul.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Mul.toString|toString(){}[0]
    }

    final object F64Ne : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ne|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ne.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ne.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Ne.toString|toString(){}[0]
    }

    final object F64Nearest : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Nearest|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Nearest.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Nearest.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Nearest.toString|toString(){}[0]
    }

    final object F64Neg : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Neg|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Neg.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Neg.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Neg.toString|toString(){}[0]
    }

    final object F64PromoteF32 : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64PromoteF32|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64PromoteF32.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64PromoteF32.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64PromoteF32.toString|toString(){}[0]
    }

    final object F64ReinterpretI64 : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ReinterpretI64|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ReinterpretI64.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ReinterpretI64.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64ReinterpretI64.toString|toString(){}[0]
    }

    final object F64Sqrt : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Sqrt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Sqrt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Sqrt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Sqrt.toString|toString(){}[0]
    }

    final object F64Sub : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Sub|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Sub.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Sub.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Sub.toString|toString(){}[0]
    }

    final object F64Trunc : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Trunc|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Trunc.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Trunc.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.F64Trunc.toString|toString(){}[0]
    }

    final object I32Add : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Add|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Add.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Add.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Add.toString|toString(){}[0]
    }

    final object I32And : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32And|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32And.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32And.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32And.toString|toString(){}[0]
    }

    final object I32Clz : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Clz|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Clz.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Clz.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Clz.toString|toString(){}[0]
    }

    final object I32Ctz : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Ctz|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Ctz.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Ctz.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Ctz.toString|toString(){}[0]
    }

    final object I32DivS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32DivS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32DivS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32DivS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32DivS.toString|toString(){}[0]
    }

    final object I32DivU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32DivU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32DivU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32DivU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32DivU.toString|toString(){}[0]
    }

    final object I32Eq : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Eq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Eq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Eq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Eq.toString|toString(){}[0]
    }

    final object I32Eqz : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Eqz|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Eqz.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Eqz.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Eqz.toString|toString(){}[0]
    }

    final object I32Extend16S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Extend16S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Extend16S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Extend16S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Extend16S.toString|toString(){}[0]
    }

    final object I32Extend8S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Extend8S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Extend8S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Extend8S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Extend8S.toString|toString(){}[0]
    }

    final object I32GeS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GeS.toString|toString(){}[0]
    }

    final object I32GeU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GeU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GeU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GeU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GeU.toString|toString(){}[0]
    }

    final object I32GtS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GtS.toString|toString(){}[0]
    }

    final object I32GtU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GtU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GtU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GtU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32GtU.toString|toString(){}[0]
    }

    final object I32LeS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LeS.toString|toString(){}[0]
    }

    final object I32LeU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LeU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LeU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LeU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LeU.toString|toString(){}[0]
    }

    final object I32LtS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LtS.toString|toString(){}[0]
    }

    final object I32LtU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LtU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LtU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LtU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32LtU.toString|toString(){}[0]
    }

    final object I32Mul : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Mul|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Mul.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Mul.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Mul.toString|toString(){}[0]
    }

    final object I32Ne : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Ne|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Ne.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Ne.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Ne.toString|toString(){}[0]
    }

    final object I32Or : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Or|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Or.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Or.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Or.toString|toString(){}[0]
    }

    final object I32Popcnt : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Popcnt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Popcnt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Popcnt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Popcnt.toString|toString(){}[0]
    }

    final object I32ReinterpretF32 : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ReinterpretF32|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ReinterpretF32.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ReinterpretF32.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ReinterpretF32.toString|toString(){}[0]
    }

    final object I32RemS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32RemS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32RemS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32RemS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32RemS.toString|toString(){}[0]
    }

    final object I32RemU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32RemU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32RemU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32RemU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32RemU.toString|toString(){}[0]
    }

    final object I32Rotl : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Rotl|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Rotl.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Rotl.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Rotl.toString|toString(){}[0]
    }

    final object I32Rotr : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Rotr|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Rotr.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Rotr.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Rotr.toString|toString(){}[0]
    }

    final object I32Shl : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Shl|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Shl.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Shl.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Shl.toString|toString(){}[0]
    }

    final object I32ShrS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ShrS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ShrS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ShrS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ShrS.toString|toString(){}[0]
    }

    final object I32ShrU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ShrU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ShrU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ShrU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32ShrU.toString|toString(){}[0]
    }

    final object I32Sub : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Sub|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Sub.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Sub.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Sub.toString|toString(){}[0]
    }

    final object I32TruncF32S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF32S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF32S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF32S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF32S.toString|toString(){}[0]
    }

    final object I32TruncF32U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF32U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF32U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF32U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF32U.toString|toString(){}[0]
    }

    final object I32TruncF64S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF64S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF64S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF64S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF64S.toString|toString(){}[0]
    }

    final object I32TruncF64U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF64U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF64U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF64U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncF64U.toString|toString(){}[0]
    }

    final object I32TruncSatF32S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF32S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF32S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF32S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF32S.toString|toString(){}[0]
    }

    final object I32TruncSatF32U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF32U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF32U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF32U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF32U.toString|toString(){}[0]
    }

    final object I32TruncSatF64S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF64S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF64S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF64S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF64S.toString|toString(){}[0]
    }

    final object I32TruncSatF64U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF64U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF64U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF64U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32TruncSatF64U.toString|toString(){}[0]
    }

    final object I32WrapI64 : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32WrapI64|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32WrapI64.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32WrapI64.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32WrapI64.toString|toString(){}[0]
    }

    final object I32Xor : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Xor|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Xor.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Xor.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I32Xor.toString|toString(){}[0]
    }

    final object I64Add : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Add|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Add.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Add.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Add.toString|toString(){}[0]
    }

    final object I64Add128 : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Add128|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Add128.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Add128.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Add128.toString|toString(){}[0]
    }

    final object I64And : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64And|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64And.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64And.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64And.toString|toString(){}[0]
    }

    final object I64Clz : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Clz|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Clz.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Clz.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Clz.toString|toString(){}[0]
    }

    final object I64Ctz : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Ctz|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Ctz.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Ctz.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Ctz.toString|toString(){}[0]
    }

    final object I64DivS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64DivS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64DivS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64DivS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64DivS.toString|toString(){}[0]
    }

    final object I64DivU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64DivU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64DivU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64DivU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64DivU.toString|toString(){}[0]
    }

    final object I64Eq : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Eq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Eq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Eq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Eq.toString|toString(){}[0]
    }

    final object I64Eqz : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Eqz|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Eqz.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Eqz.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Eqz.toString|toString(){}[0]
    }

    final object I64Extend16S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend16S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend16S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend16S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend16S.toString|toString(){}[0]
    }

    final object I64Extend32S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend32S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend32S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend32S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend32S.toString|toString(){}[0]
    }

    final object I64Extend8S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend8S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend8S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend8S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Extend8S.toString|toString(){}[0]
    }

    final object I64ExtendI32S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ExtendI32S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ExtendI32S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ExtendI32S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ExtendI32S.toString|toString(){}[0]
    }

    final object I64ExtendI32U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ExtendI32U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ExtendI32U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ExtendI32U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ExtendI32U.toString|toString(){}[0]
    }

    final object I64GeS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GeS.toString|toString(){}[0]
    }

    final object I64GeU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GeU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GeU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GeU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GeU.toString|toString(){}[0]
    }

    final object I64GtS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GtS.toString|toString(){}[0]
    }

    final object I64GtU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GtU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GtU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GtU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64GtU.toString|toString(){}[0]
    }

    final object I64LeS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LeS.toString|toString(){}[0]
    }

    final object I64LeU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LeU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LeU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LeU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LeU.toString|toString(){}[0]
    }

    final object I64LtS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LtS.toString|toString(){}[0]
    }

    final object I64LtU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LtU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LtU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LtU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64LtU.toString|toString(){}[0]
    }

    final object I64Mul : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Mul|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Mul.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Mul.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Mul.toString|toString(){}[0]
    }

    final object I64MulWideS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64MulWideS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64MulWideS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64MulWideS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64MulWideS.toString|toString(){}[0]
    }

    final object I64MulWideU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64MulWideU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64MulWideU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64MulWideU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64MulWideU.toString|toString(){}[0]
    }

    final object I64Ne : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Ne|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Ne.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Ne.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Ne.toString|toString(){}[0]
    }

    final object I64Or : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Or|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Or.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Or.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Or.toString|toString(){}[0]
    }

    final object I64Popcnt : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Popcnt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Popcnt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Popcnt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Popcnt.toString|toString(){}[0]
    }

    final object I64ReinterpretF64 : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ReinterpretF64|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ReinterpretF64.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ReinterpretF64.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ReinterpretF64.toString|toString(){}[0]
    }

    final object I64RemS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64RemS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64RemS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64RemS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64RemS.toString|toString(){}[0]
    }

    final object I64RemU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64RemU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64RemU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64RemU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64RemU.toString|toString(){}[0]
    }

    final object I64Rotl : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Rotl|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Rotl.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Rotl.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Rotl.toString|toString(){}[0]
    }

    final object I64Rotr : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Rotr|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Rotr.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Rotr.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Rotr.toString|toString(){}[0]
    }

    final object I64Shl : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Shl|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Shl.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Shl.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Shl.toString|toString(){}[0]
    }

    final object I64ShrS : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ShrS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ShrS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ShrS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ShrS.toString|toString(){}[0]
    }

    final object I64ShrU : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ShrU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ShrU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ShrU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64ShrU.toString|toString(){}[0]
    }

    final object I64Sub : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Sub|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Sub.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Sub.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Sub.toString|toString(){}[0]
    }

    final object I64Sub128 : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Sub128|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Sub128.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Sub128.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Sub128.toString|toString(){}[0]
    }

    final object I64TruncF32S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF32S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF32S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF32S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF32S.toString|toString(){}[0]
    }

    final object I64TruncF32U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF32U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF32U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF32U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF32U.toString|toString(){}[0]
    }

    final object I64TruncF64S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF64S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF64S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF64S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF64S.toString|toString(){}[0]
    }

    final object I64TruncF64U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF64U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF64U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF64U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncF64U.toString|toString(){}[0]
    }

    final object I64TruncSatF32S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF32S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF32S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF32S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF32S.toString|toString(){}[0]
    }

    final object I64TruncSatF32U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF32U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF32U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF32U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF32U.toString|toString(){}[0]
    }

    final object I64TruncSatF64S : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF64S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF64S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF64S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF64S.toString|toString(){}[0]
    }

    final object I64TruncSatF64U : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF64U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF64U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF64U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64TruncSatF64U.toString|toString(){}[0]
    }

    final object I64Xor : io.github.charlietap.chasm.ast.instruction/NumericInstruction { // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Xor|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Xor.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Xor.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/NumericInstruction.I64Xor.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.instruction/ParametricInstruction : io.github.charlietap.chasm.ast.instruction/Instruction { // io.github.charlietap.chasm.ast.instruction/ParametricInstruction|null[0]
    final value class SelectWithType : io.github.charlietap.chasm.ast.instruction/ParametricInstruction { // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.SelectWithType|null[0]
        constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.type/ValueType>) // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.SelectWithType.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.type.ValueType>){}[0]

        final val types // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.SelectWithType.types|{}types[0]
            final fun <get-types>(): kotlin.collections/List<io.github.charlietap.chasm.type/ValueType> // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.SelectWithType.types.<get-types>|<get-types>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.SelectWithType.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.SelectWithType.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.SelectWithType.toString|toString(){}[0]
    }

    final object Drop : io.github.charlietap.chasm.ast.instruction/ParametricInstruction { // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.Drop|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.Drop.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.Drop.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.Drop.toString|toString(){}[0]
    }

    final object Select : io.github.charlietap.chasm.ast.instruction/ParametricInstruction { // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.Select|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.Select.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.Select.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ParametricInstruction.Select.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.instruction/ReferenceInstruction : io.github.charlietap.chasm.ast.instruction/Instruction { // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction|null[0]
    final value class RefCast : io.github.charlietap.chasm.ast.instruction/ReferenceInstruction { // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefCast|null[0]
        constructor <init>(io.github.charlietap.chasm.type/ReferenceType) // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefCast.<init>|<init>(io.github.charlietap.chasm.type.ReferenceType){}[0]

        final val referenceType // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefCast.referenceType|{}referenceType[0]
            final fun <get-referenceType>(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefCast.referenceType.<get-referenceType>|<get-referenceType>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefCast.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefCast.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefCast.toString|toString(){}[0]
    }

    final value class RefFunc : io.github.charlietap.chasm.ast.instruction/ReferenceInstruction { // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefFunc|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.FunctionIndex) // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefFunc.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.FunctionIndex){}[0]

        final val funcIdx // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefFunc.funcIdx|{}funcIdx[0]
            final fun <get-funcIdx>(): io.github.charlietap.chasm.ast.module/Index.FunctionIndex // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefFunc.funcIdx.<get-funcIdx>|<get-funcIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefFunc.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefFunc.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefFunc.toString|toString(){}[0]
    }

    final value class RefNull : io.github.charlietap.chasm.ast.instruction/ReferenceInstruction { // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefNull|null[0]
        constructor <init>(io.github.charlietap.chasm.type/HeapType) // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefNull.<init>|<init>(io.github.charlietap.chasm.type.HeapType){}[0]

        final val type // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefNull.type|{}type[0]
            final fun <get-type>(): io.github.charlietap.chasm.type/HeapType // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefNull.type.<get-type>|<get-type>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefNull.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefNull.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefNull.toString|toString(){}[0]
    }

    final value class RefTest : io.github.charlietap.chasm.ast.instruction/ReferenceInstruction { // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefTest|null[0]
        constructor <init>(io.github.charlietap.chasm.type/ReferenceType) // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefTest.<init>|<init>(io.github.charlietap.chasm.type.ReferenceType){}[0]

        final val referenceType // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefTest.referenceType|{}referenceType[0]
            final fun <get-referenceType>(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefTest.referenceType.<get-referenceType>|<get-referenceType>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefTest.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefTest.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefTest.toString|toString(){}[0]
    }

    final object RefAsNonNull : io.github.charlietap.chasm.ast.instruction/ReferenceInstruction { // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefAsNonNull|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefAsNonNull.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefAsNonNull.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefAsNonNull.toString|toString(){}[0]
    }

    final object RefEq : io.github.charlietap.chasm.ast.instruction/ReferenceInstruction { // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefEq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefEq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefEq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefEq.toString|toString(){}[0]
    }

    final object RefIsNull : io.github.charlietap.chasm.ast.instruction/ReferenceInstruction { // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefIsNull|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefIsNull.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefIsNull.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/ReferenceInstruction.RefIsNull.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.instruction/TableInstruction : io.github.charlietap.chasm.ast.instruction/Instruction { // io.github.charlietap.chasm.ast.instruction/TableInstruction|null[0]
    final class TableCopy : io.github.charlietap.chasm.ast.instruction/TableInstruction { // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TableIndex, io.github.charlietap.chasm.ast.module/Index.TableIndex) // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TableIndex;io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]

        final val destTableIdx // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.destTableIdx|{}destTableIdx[0]
            final fun <get-destTableIdx>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.destTableIdx.<get-destTableIdx>|<get-destTableIdx>(){}[0]
        final val srcTableIdx // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.srcTableIdx|{}srcTableIdx[0]
            final fun <get-srcTableIdx>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.srcTableIdx.<get-srcTableIdx>|<get-srcTableIdx>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.TableIndex = ..., io.github.charlietap.chasm.ast.module/Index.TableIndex = ...): io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.copy|copy(io.github.charlietap.chasm.ast.module.Index.TableIndex;io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableCopy.toString|toString(){}[0]
    }

    final class TableInit : io.github.charlietap.chasm.ast.instruction/TableInstruction { // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.ElementIndex, io.github.charlietap.chasm.ast.module/Index.TableIndex) // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.ElementIndex;io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]

        final val elemIdx // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.elemIdx|{}elemIdx[0]
            final fun <get-elemIdx>(): io.github.charlietap.chasm.ast.module/Index.ElementIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.elemIdx.<get-elemIdx>|<get-elemIdx>(){}[0]
        final val tableIdx // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.tableIdx|{}tableIdx[0]
            final fun <get-tableIdx>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.tableIdx.<get-tableIdx>|<get-tableIdx>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.module/Index.ElementIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.component1|component1(){}[0]
        final fun component2(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.module/Index.ElementIndex = ..., io.github.charlietap.chasm.ast.module/Index.TableIndex = ...): io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.copy|copy(io.github.charlietap.chasm.ast.module.Index.ElementIndex;io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableInit.toString|toString(){}[0]
    }

    final value class ElemDrop : io.github.charlietap.chasm.ast.instruction/TableInstruction { // io.github.charlietap.chasm.ast.instruction/TableInstruction.ElemDrop|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.ElementIndex) // io.github.charlietap.chasm.ast.instruction/TableInstruction.ElemDrop.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.ElementIndex){}[0]

        final val elemIdx // io.github.charlietap.chasm.ast.instruction/TableInstruction.ElemDrop.elemIdx|{}elemIdx[0]
            final fun <get-elemIdx>(): io.github.charlietap.chasm.ast.module/Index.ElementIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.ElemDrop.elemIdx.<get-elemIdx>|<get-elemIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/TableInstruction.ElemDrop.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/TableInstruction.ElemDrop.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/TableInstruction.ElemDrop.toString|toString(){}[0]
    }

    final value class TableFill : io.github.charlietap.chasm.ast.instruction/TableInstruction { // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableFill|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TableIndex) // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableFill.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]

        final val tableIdx // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableFill.tableIdx|{}tableIdx[0]
            final fun <get-tableIdx>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableFill.tableIdx.<get-tableIdx>|<get-tableIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableFill.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableFill.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableFill.toString|toString(){}[0]
    }

    final value class TableGet : io.github.charlietap.chasm.ast.instruction/TableInstruction { // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGet|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TableIndex) // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGet.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]

        final val tableIdx // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGet.tableIdx|{}tableIdx[0]
            final fun <get-tableIdx>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGet.tableIdx.<get-tableIdx>|<get-tableIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGet.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGet.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGet.toString|toString(){}[0]
    }

    final value class TableGrow : io.github.charlietap.chasm.ast.instruction/TableInstruction { // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGrow|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TableIndex) // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGrow.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]

        final val tableIdx // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGrow.tableIdx|{}tableIdx[0]
            final fun <get-tableIdx>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGrow.tableIdx.<get-tableIdx>|<get-tableIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGrow.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGrow.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableGrow.toString|toString(){}[0]
    }

    final value class TableSet : io.github.charlietap.chasm.ast.instruction/TableInstruction { // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSet|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TableIndex) // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSet.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]

        final val tableIdx // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSet.tableIdx|{}tableIdx[0]
            final fun <get-tableIdx>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSet.tableIdx.<get-tableIdx>|<get-tableIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSet.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSet.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSet.toString|toString(){}[0]
    }

    final value class TableSize : io.github.charlietap.chasm.ast.instruction/TableInstruction { // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSize|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.TableIndex) // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSize.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]

        final val tableIdx // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSize.tableIdx|{}tableIdx[0]
            final fun <get-tableIdx>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSize.tableIdx.<get-tableIdx>|<get-tableIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSize.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSize.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/TableInstruction.TableSize.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.instruction/VariableInstruction : io.github.charlietap.chasm.ast.instruction/Instruction { // io.github.charlietap.chasm.ast.instruction/VariableInstruction|null[0]
    final value class GlobalGet : io.github.charlietap.chasm.ast.instruction/VariableInstruction { // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalGet|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.GlobalIndex) // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalGet.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.GlobalIndex){}[0]

        final val globalIdx // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalGet.globalIdx|{}globalIdx[0]
            final fun <get-globalIdx>(): io.github.charlietap.chasm.ast.module/Index.GlobalIndex // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalGet.globalIdx.<get-globalIdx>|<get-globalIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalGet.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalGet.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalGet.toString|toString(){}[0]
    }

    final value class GlobalSet : io.github.charlietap.chasm.ast.instruction/VariableInstruction { // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalSet|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.GlobalIndex) // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalSet.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.GlobalIndex){}[0]

        final val globalIdx // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalSet.globalIdx|{}globalIdx[0]
            final fun <get-globalIdx>(): io.github.charlietap.chasm.ast.module/Index.GlobalIndex // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalSet.globalIdx.<get-globalIdx>|<get-globalIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalSet.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalSet.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VariableInstruction.GlobalSet.toString|toString(){}[0]
    }

    final value class LocalGet : io.github.charlietap.chasm.ast.instruction/VariableInstruction { // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalGet|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.LocalIndex) // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalGet.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LocalIndex){}[0]

        final val localIdx // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalGet.localIdx|{}localIdx[0]
            final fun <get-localIdx>(): io.github.charlietap.chasm.ast.module/Index.LocalIndex // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalGet.localIdx.<get-localIdx>|<get-localIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalGet.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalGet.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalGet.toString|toString(){}[0]
    }

    final value class LocalSet : io.github.charlietap.chasm.ast.instruction/VariableInstruction { // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalSet|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.LocalIndex) // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalSet.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LocalIndex){}[0]

        final val localIdx // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalSet.localIdx|{}localIdx[0]
            final fun <get-localIdx>(): io.github.charlietap.chasm.ast.module/Index.LocalIndex // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalSet.localIdx.<get-localIdx>|<get-localIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalSet.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalSet.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalSet.toString|toString(){}[0]
    }

    final value class LocalTee : io.github.charlietap.chasm.ast.instruction/VariableInstruction { // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalTee|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.module/Index.LocalIndex) // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalTee.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LocalIndex){}[0]

        final val localIdx // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalTee.localIdx|{}localIdx[0]
            final fun <get-localIdx>(): io.github.charlietap.chasm.ast.module/Index.LocalIndex // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalTee.localIdx.<get-localIdx>|<get-localIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalTee.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalTee.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VariableInstruction.LocalTee.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.instruction/VectorInstruction : io.github.charlietap.chasm.ast.instruction/Instruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction|null[0]
    final class V128Load16Lane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg, kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]
        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.component1|component1(){}[0]
        final fun component2(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.instruction/MemArg = ..., kotlin/Byte = ...): io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.copy|copy(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Lane.toString|toString(){}[0]
    }

    final class V128Load32Lane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg, kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]
        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.component1|component1(){}[0]
        final fun component2(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.instruction/MemArg = ..., kotlin/Byte = ...): io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.copy|copy(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Lane.toString|toString(){}[0]
    }

    final class V128Load64Lane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg, kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]
        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.component1|component1(){}[0]
        final fun component2(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.instruction/MemArg = ..., kotlin/Byte = ...): io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.copy|copy(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Lane.toString|toString(){}[0]
    }

    final class V128Load8Lane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg, kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]
        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.component1|component1(){}[0]
        final fun component2(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.instruction/MemArg = ..., kotlin/Byte = ...): io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.copy|copy(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Lane.toString|toString(){}[0]
    }

    final class V128Store16Lane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg, kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]
        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.component1|component1(){}[0]
        final fun component2(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.instruction/MemArg = ..., kotlin/Byte = ...): io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.copy|copy(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store16Lane.toString|toString(){}[0]
    }

    final class V128Store32Lane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg, kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]
        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.component1|component1(){}[0]
        final fun component2(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.instruction/MemArg = ..., kotlin/Byte = ...): io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.copy|copy(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store32Lane.toString|toString(){}[0]
    }

    final class V128Store64Lane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg, kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]
        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.component1|component1(){}[0]
        final fun component2(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.instruction/MemArg = ..., kotlin/Byte = ...): io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.copy|copy(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store64Lane.toString|toString(){}[0]
    }

    final class V128Store8Lane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg, kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]
        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun component1(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.component1|component1(){}[0]
        final fun component2(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.component2|component2(){}[0]
        final fun copy(io.github.charlietap.chasm.ast.instruction/MemArg = ..., kotlin/Byte = ...): io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.copy|copy(io.github.charlietap.chasm.ast.instruction.MemArg;kotlin.Byte){}[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store8Lane.toString|toString(){}[0]
    }

    final value class F32x4ExtractLane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ExtractLane|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ExtractLane.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ExtractLane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ExtractLane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ExtractLane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ExtractLane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ExtractLane.toString|toString(){}[0]
    }

    final value class F32x4ReplaceLane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ReplaceLane|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ReplaceLane.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ReplaceLane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ReplaceLane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ReplaceLane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ReplaceLane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ReplaceLane.toString|toString(){}[0]
    }

    final value class F32x4Splat : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Splat|null[0]
        constructor <init>(kotlin/Float) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Splat.<init>|<init>(kotlin.Float){}[0]

        final val value // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Splat.value|{}value[0]
            final fun <get-value>(): kotlin/Float // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Splat.value.<get-value>|<get-value>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Splat.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Splat.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Splat.toString|toString(){}[0]
    }

    final value class F64x2ExtractLane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ExtractLane|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ExtractLane.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ExtractLane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ExtractLane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ExtractLane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ExtractLane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ExtractLane.toString|toString(){}[0]
    }

    final value class F64x2ReplaceLane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ReplaceLane|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ReplaceLane.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ReplaceLane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ReplaceLane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ReplaceLane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ReplaceLane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ReplaceLane.toString|toString(){}[0]
    }

    final value class F64x2Splat : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Splat|null[0]
        constructor <init>(kotlin/Double) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Splat.<init>|<init>(kotlin.Double){}[0]

        final val value // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Splat.value|{}value[0]
            final fun <get-value>(): kotlin/Double // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Splat.value.<get-value>|<get-value>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Splat.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Splat.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Splat.toString|toString(){}[0]
    }

    final value class I16x8ExtractLaneS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneS|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneS.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneS.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneS.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneS.toString|toString(){}[0]
    }

    final value class I16x8ExtractLaneU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneU|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneU.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneU.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneU.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtractLaneU.toString|toString(){}[0]
    }

    final value class I16x8ReplaceLane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ReplaceLane|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ReplaceLane.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ReplaceLane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ReplaceLane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ReplaceLane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ReplaceLane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ReplaceLane.toString|toString(){}[0]
    }

    final value class I16x8Splat : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Splat|null[0]
        constructor <init>(kotlin/Short) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Splat.<init>|<init>(kotlin.Short){}[0]

        final val value // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Splat.value|{}value[0]
            final fun <get-value>(): kotlin/Short // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Splat.value.<get-value>|<get-value>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Splat.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Splat.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Splat.toString|toString(){}[0]
    }

    final value class I32x4ExtractLane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtractLane|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtractLane.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtractLane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtractLane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtractLane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtractLane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtractLane.toString|toString(){}[0]
    }

    final value class I32x4ReplaceLane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ReplaceLane|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ReplaceLane.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ReplaceLane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ReplaceLane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ReplaceLane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ReplaceLane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ReplaceLane.toString|toString(){}[0]
    }

    final value class I32x4Splat : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Splat|null[0]
        constructor <init>(kotlin/Int) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Splat.<init>|<init>(kotlin.Int){}[0]

        final val value // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Splat.value|{}value[0]
            final fun <get-value>(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Splat.value.<get-value>|<get-value>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Splat.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Splat.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Splat.toString|toString(){}[0]
    }

    final value class I64x2ExtractLane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtractLane|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtractLane.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtractLane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtractLane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtractLane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtractLane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtractLane.toString|toString(){}[0]
    }

    final value class I64x2ReplaceLane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ReplaceLane|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ReplaceLane.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ReplaceLane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ReplaceLane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ReplaceLane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ReplaceLane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ReplaceLane.toString|toString(){}[0]
    }

    final value class I64x2Splat : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Splat|null[0]
        constructor <init>(kotlin/Long) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Splat.<init>|<init>(kotlin.Long){}[0]

        final val value // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Splat.value|{}value[0]
            final fun <get-value>(): kotlin/Long // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Splat.value.<get-value>|<get-value>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Splat.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Splat.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Splat.toString|toString(){}[0]
    }

    final value class I8x16ExtractLaneS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneS|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneS.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneS.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneS.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneS.toString|toString(){}[0]
    }

    final value class I8x16ExtractLaneU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneU|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneU.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneU.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneU.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ExtractLaneU.toString|toString(){}[0]
    }

    final value class I8x16ReplaceLane : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ReplaceLane|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ReplaceLane.<init>|<init>(kotlin.Byte){}[0]

        final val laneIdx // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ReplaceLane.laneIdx|{}laneIdx[0]
            final fun <get-laneIdx>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ReplaceLane.laneIdx.<get-laneIdx>|<get-laneIdx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ReplaceLane.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ReplaceLane.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ReplaceLane.toString|toString(){}[0]
    }

    final value class I8x16Shuffle : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shuffle|null[0]
        constructor <init>(kotlin/ByteArray) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shuffle.<init>|<init>(kotlin.ByteArray){}[0]

        final val laneIndices // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shuffle.laneIndices|{}laneIndices[0]
            final fun <get-laneIndices>(): kotlin/ByteArray // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shuffle.laneIndices.<get-laneIndices>|<get-laneIndices>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shuffle.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shuffle.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shuffle.toString|toString(){}[0]
    }

    final value class I8x16Splat : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Splat|null[0]
        constructor <init>(kotlin/Byte) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Splat.<init>|<init>(kotlin.Byte){}[0]

        final val value // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Splat.value|{}value[0]
            final fun <get-value>(): kotlin/Byte // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Splat.value.<get-value>|<get-value>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Splat.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Splat.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Splat.toString|toString(){}[0]
    }

    final value class V128Const : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Const|null[0]
        constructor <init>(kotlin/ByteArray) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Const.<init>|<init>(kotlin.ByteArray){}[0]

        final val bytes // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Const.bytes|{}bytes[0]
            final fun <get-bytes>(): kotlin/ByteArray // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Const.bytes.<get-bytes>|<get-bytes>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Const.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Const.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Const.toString|toString(){}[0]
    }

    final value class V128Load : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load.toString|toString(){}[0]
    }

    final value class V128Load16Splat : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Splat|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Splat.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Splat.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Splat.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Splat.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Splat.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load16Splat.toString|toString(){}[0]
    }

    final value class V128Load32Splat : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Splat|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Splat.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Splat.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Splat.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Splat.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Splat.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load32Splat.toString|toString(){}[0]
    }

    final value class V128Load64Splat : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Splat|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Splat.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Splat.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Splat.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Splat.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Splat.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load64Splat.toString|toString(){}[0]
    }

    final value class V128Load8Splat : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Splat|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Splat.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Splat.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Splat.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Splat.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Splat.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Load8Splat.toString|toString(){}[0]
    }

    final value class V128Store : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store|null[0]
        constructor <init>(io.github.charlietap.chasm.ast.instruction/MemArg) // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store.<init>|<init>(io.github.charlietap.chasm.ast.instruction.MemArg){}[0]

        final val memArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store.memArg|{}memArg[0]
            final fun <get-memArg>(): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store.memArg.<get-memArg>|<get-memArg>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Store.toString|toString(){}[0]
    }

    final object F32x4Abs : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Abs|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Abs.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Abs.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Abs.toString|toString(){}[0]
    }

    final object F32x4Add : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Add|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Add.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Add.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Add.toString|toString(){}[0]
    }

    final object F32x4Ceil : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ceil|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ceil.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ceil.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ceil.toString|toString(){}[0]
    }

    final object F32x4ConvertI32x4S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ConvertI32x4S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ConvertI32x4S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ConvertI32x4S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ConvertI32x4S.toString|toString(){}[0]
    }

    final object F32x4ConvertI32x4U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ConvertI32x4U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ConvertI32x4U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ConvertI32x4U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4ConvertI32x4U.toString|toString(){}[0]
    }

    final object F32x4DemoteF64x2Zero : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4DemoteF64x2Zero|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4DemoteF64x2Zero.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4DemoteF64x2Zero.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4DemoteF64x2Zero.toString|toString(){}[0]
    }

    final object F32x4Div : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Div|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Div.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Div.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Div.toString|toString(){}[0]
    }

    final object F32x4Eq : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Eq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Eq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Eq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Eq.toString|toString(){}[0]
    }

    final object F32x4Floor : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Floor|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Floor.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Floor.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Floor.toString|toString(){}[0]
    }

    final object F32x4Ge : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ge|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ge.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ge.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ge.toString|toString(){}[0]
    }

    final object F32x4Gt : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Gt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Gt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Gt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Gt.toString|toString(){}[0]
    }

    final object F32x4Le : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Le|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Le.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Le.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Le.toString|toString(){}[0]
    }

    final object F32x4Lt : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Lt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Lt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Lt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Lt.toString|toString(){}[0]
    }

    final object F32x4Max : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Max|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Max.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Max.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Max.toString|toString(){}[0]
    }

    final object F32x4Min : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Min|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Min.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Min.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Min.toString|toString(){}[0]
    }

    final object F32x4Mul : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Mul|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Mul.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Mul.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Mul.toString|toString(){}[0]
    }

    final object F32x4Ne : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ne|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ne.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ne.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Ne.toString|toString(){}[0]
    }

    final object F32x4Nearest : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Nearest|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Nearest.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Nearest.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Nearest.toString|toString(){}[0]
    }

    final object F32x4Neg : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Neg|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Neg.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Neg.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Neg.toString|toString(){}[0]
    }

    final object F32x4PMax : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4PMax|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4PMax.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4PMax.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4PMax.toString|toString(){}[0]
    }

    final object F32x4PMin : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4PMin|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4PMin.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4PMin.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4PMin.toString|toString(){}[0]
    }

    final object F32x4Sqrt : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Sqrt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Sqrt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Sqrt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Sqrt.toString|toString(){}[0]
    }

    final object F32x4Sub : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Sub|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Sub.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Sub.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Sub.toString|toString(){}[0]
    }

    final object F32x4Trunc : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Trunc|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Trunc.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Trunc.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F32x4Trunc.toString|toString(){}[0]
    }

    final object F64x2Abs : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Abs|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Abs.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Abs.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Abs.toString|toString(){}[0]
    }

    final object F64x2Add : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Add|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Add.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Add.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Add.toString|toString(){}[0]
    }

    final object F64x2Ceil : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ceil|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ceil.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ceil.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ceil.toString|toString(){}[0]
    }

    final object F64x2ConvertLowI32x4S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ConvertLowI32x4S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ConvertLowI32x4S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ConvertLowI32x4S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ConvertLowI32x4S.toString|toString(){}[0]
    }

    final object F64x2ConvertLowI32x4U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ConvertLowI32x4U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ConvertLowI32x4U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ConvertLowI32x4U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2ConvertLowI32x4U.toString|toString(){}[0]
    }

    final object F64x2Div : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Div|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Div.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Div.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Div.toString|toString(){}[0]
    }

    final object F64x2Eq : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Eq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Eq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Eq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Eq.toString|toString(){}[0]
    }

    final object F64x2Floor : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Floor|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Floor.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Floor.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Floor.toString|toString(){}[0]
    }

    final object F64x2Ge : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ge|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ge.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ge.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ge.toString|toString(){}[0]
    }

    final object F64x2Gt : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Gt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Gt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Gt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Gt.toString|toString(){}[0]
    }

    final object F64x2Le : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Le|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Le.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Le.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Le.toString|toString(){}[0]
    }

    final object F64x2Lt : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Lt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Lt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Lt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Lt.toString|toString(){}[0]
    }

    final object F64x2Max : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Max|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Max.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Max.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Max.toString|toString(){}[0]
    }

    final object F64x2Min : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Min|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Min.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Min.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Min.toString|toString(){}[0]
    }

    final object F64x2Mul : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Mul|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Mul.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Mul.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Mul.toString|toString(){}[0]
    }

    final object F64x2Ne : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ne|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ne.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ne.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Ne.toString|toString(){}[0]
    }

    final object F64x2Nearest : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Nearest|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Nearest.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Nearest.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Nearest.toString|toString(){}[0]
    }

    final object F64x2Neg : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Neg|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Neg.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Neg.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Neg.toString|toString(){}[0]
    }

    final object F64x2PMax : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PMax|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PMax.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PMax.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PMax.toString|toString(){}[0]
    }

    final object F64x2PMin : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PMin|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PMin.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PMin.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PMin.toString|toString(){}[0]
    }

    final object F64x2PromoteLowF32x4 : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PromoteLowF32x4|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PromoteLowF32x4.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PromoteLowF32x4.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2PromoteLowF32x4.toString|toString(){}[0]
    }

    final object F64x2Sqrt : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Sqrt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Sqrt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Sqrt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Sqrt.toString|toString(){}[0]
    }

    final object F64x2Sub : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Sub|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Sub.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Sub.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Sub.toString|toString(){}[0]
    }

    final object F64x2Trunc : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Trunc|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Trunc.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Trunc.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.F64x2Trunc.toString|toString(){}[0]
    }

    final object I16x8Abs : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Abs|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Abs.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Abs.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Abs.toString|toString(){}[0]
    }

    final object I16x8Add : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Add|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Add.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Add.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Add.toString|toString(){}[0]
    }

    final object I16x8AddSatS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AddSatS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AddSatS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AddSatS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AddSatS.toString|toString(){}[0]
    }

    final object I16x8AddSatU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AddSatU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AddSatU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AddSatU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AddSatU.toString|toString(){}[0]
    }

    final object I16x8AllTrue : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AllTrue|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AllTrue.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AllTrue.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AllTrue.toString|toString(){}[0]
    }

    final object I16x8AvgrU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AvgrU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AvgrU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AvgrU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8AvgrU.toString|toString(){}[0]
    }

    final object I16x8Bitmask : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Bitmask|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Bitmask.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Bitmask.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Bitmask.toString|toString(){}[0]
    }

    final object I16x8Eq : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Eq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Eq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Eq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Eq.toString|toString(){}[0]
    }

    final object I16x8ExtendHighI8x16S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendHighI8x16S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendHighI8x16S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendHighI8x16S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendHighI8x16S.toString|toString(){}[0]
    }

    final object I16x8ExtendHighI8x16U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendHighI8x16U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendHighI8x16U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendHighI8x16U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendHighI8x16U.toString|toString(){}[0]
    }

    final object I16x8ExtendLowI8x16S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendLowI8x16S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendLowI8x16S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendLowI8x16S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendLowI8x16S.toString|toString(){}[0]
    }

    final object I16x8ExtendLowI8x16U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendLowI8x16U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendLowI8x16U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendLowI8x16U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ExtendLowI8x16U.toString|toString(){}[0]
    }

    final object I16x8GeS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GeS.toString|toString(){}[0]
    }

    final object I16x8GeU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GeU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GeU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GeU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GeU.toString|toString(){}[0]
    }

    final object I16x8GtS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GtS.toString|toString(){}[0]
    }

    final object I16x8GtU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GtU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GtU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GtU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8GtU.toString|toString(){}[0]
    }

    final object I16x8LeS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LeS.toString|toString(){}[0]
    }

    final object I16x8LeU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LeU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LeU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LeU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LeU.toString|toString(){}[0]
    }

    final object I16x8LtS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LtS.toString|toString(){}[0]
    }

    final object I16x8LtU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LtU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LtU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LtU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8LtU.toString|toString(){}[0]
    }

    final object I16x8MaxS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MaxS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MaxS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MaxS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MaxS.toString|toString(){}[0]
    }

    final object I16x8MaxU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MaxU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MaxU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MaxU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MaxU.toString|toString(){}[0]
    }

    final object I16x8MinS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MinS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MinS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MinS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MinS.toString|toString(){}[0]
    }

    final object I16x8MinU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MinU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MinU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MinU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8MinU.toString|toString(){}[0]
    }

    final object I16x8Mul : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Mul|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Mul.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Mul.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Mul.toString|toString(){}[0]
    }

    final object I16x8NarrowI32x4S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8NarrowI32x4S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8NarrowI32x4S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8NarrowI32x4S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8NarrowI32x4S.toString|toString(){}[0]
    }

    final object I16x8NarrowI32x4U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8NarrowI32x4U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8NarrowI32x4U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8NarrowI32x4U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8NarrowI32x4U.toString|toString(){}[0]
    }

    final object I16x8Ne : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Ne|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Ne.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Ne.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Ne.toString|toString(){}[0]
    }

    final object I16x8Neg : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Neg|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Neg.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Neg.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Neg.toString|toString(){}[0]
    }

    final object I16x8Q15mulrSatS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Q15mulrSatS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Q15mulrSatS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Q15mulrSatS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Q15mulrSatS.toString|toString(){}[0]
    }

    final object I16x8Shl : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Shl|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Shl.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Shl.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Shl.toString|toString(){}[0]
    }

    final object I16x8ShrS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ShrS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ShrS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ShrS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ShrS.toString|toString(){}[0]
    }

    final object I16x8ShrU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ShrU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ShrU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ShrU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8ShrU.toString|toString(){}[0]
    }

    final object I16x8Sub : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Sub|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Sub.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Sub.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8Sub.toString|toString(){}[0]
    }

    final object I16x8SubSatS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8SubSatS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8SubSatS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8SubSatS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8SubSatS.toString|toString(){}[0]
    }

    final object I16x8SubSatU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8SubSatU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8SubSatU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8SubSatU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I16x8SubSatU.toString|toString(){}[0]
    }

    final object I32x4Abs : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Abs|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Abs.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Abs.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Abs.toString|toString(){}[0]
    }

    final object I32x4Add : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Add|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Add.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Add.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Add.toString|toString(){}[0]
    }

    final object I32x4AllTrue : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4AllTrue|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4AllTrue.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4AllTrue.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4AllTrue.toString|toString(){}[0]
    }

    final object I32x4Bitmask : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Bitmask|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Bitmask.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Bitmask.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Bitmask.toString|toString(){}[0]
    }

    final object I32x4DotI16x8S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4DotI16x8S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4DotI16x8S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4DotI16x8S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4DotI16x8S.toString|toString(){}[0]
    }

    final object I32x4Eq : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Eq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Eq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Eq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Eq.toString|toString(){}[0]
    }

    final object I32x4ExtaddPairwiseI16x8S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtaddPairwiseI16x8S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtaddPairwiseI16x8S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtaddPairwiseI16x8S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtaddPairwiseI16x8S.toString|toString(){}[0]
    }

    final object I32x4ExtaddPairwiseI16x8U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtaddPairwiseI16x8U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtaddPairwiseI16x8U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtaddPairwiseI16x8U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtaddPairwiseI16x8U.toString|toString(){}[0]
    }

    final object I32x4ExtendHighI16x8S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendHighI16x8S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendHighI16x8S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendHighI16x8S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendHighI16x8S.toString|toString(){}[0]
    }

    final object I32x4ExtendHighI16x8U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendHighI16x8U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendHighI16x8U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendHighI16x8U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendHighI16x8U.toString|toString(){}[0]
    }

    final object I32x4ExtendLowI16x8S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendLowI16x8S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendLowI16x8S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendLowI16x8S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendLowI16x8S.toString|toString(){}[0]
    }

    final object I32x4ExtendLowI16x8U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendLowI16x8U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendLowI16x8U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendLowI16x8U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtendLowI16x8U.toString|toString(){}[0]
    }

    final object I32x4ExtmulHighI16x8S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulHighI16x8S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulHighI16x8S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulHighI16x8S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulHighI16x8S.toString|toString(){}[0]
    }

    final object I32x4ExtmulHighI16x8U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulHighI16x8U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulHighI16x8U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulHighI16x8U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulHighI16x8U.toString|toString(){}[0]
    }

    final object I32x4ExtmulLowI16x8S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulLowI16x8S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulLowI16x8S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulLowI16x8S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulLowI16x8S.toString|toString(){}[0]
    }

    final object I32x4ExtmulLowI16x8U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulLowI16x8U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulLowI16x8U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulLowI16x8U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ExtmulLowI16x8U.toString|toString(){}[0]
    }

    final object I32x4GeS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GeS.toString|toString(){}[0]
    }

    final object I32x4GeU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GeU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GeU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GeU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GeU.toString|toString(){}[0]
    }

    final object I32x4GtS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GtS.toString|toString(){}[0]
    }

    final object I32x4GtU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GtU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GtU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GtU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4GtU.toString|toString(){}[0]
    }

    final object I32x4LeS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LeS.toString|toString(){}[0]
    }

    final object I32x4LeU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LeU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LeU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LeU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LeU.toString|toString(){}[0]
    }

    final object I32x4LtS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LtS.toString|toString(){}[0]
    }

    final object I32x4LtU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LtU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LtU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LtU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4LtU.toString|toString(){}[0]
    }

    final object I32x4MaxS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MaxS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MaxS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MaxS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MaxS.toString|toString(){}[0]
    }

    final object I32x4MaxU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MaxU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MaxU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MaxU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MaxU.toString|toString(){}[0]
    }

    final object I32x4MinS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MinS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MinS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MinS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MinS.toString|toString(){}[0]
    }

    final object I32x4MinU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MinU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MinU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MinU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4MinU.toString|toString(){}[0]
    }

    final object I32x4Mul : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Mul|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Mul.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Mul.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Mul.toString|toString(){}[0]
    }

    final object I32x4Ne : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Ne|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Ne.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Ne.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Ne.toString|toString(){}[0]
    }

    final object I32x4Neg : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Neg|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Neg.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Neg.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Neg.toString|toString(){}[0]
    }

    final object I32x4Shl : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Shl|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Shl.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Shl.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Shl.toString|toString(){}[0]
    }

    final object I32x4ShrS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ShrS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ShrS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ShrS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ShrS.toString|toString(){}[0]
    }

    final object I32x4ShrU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ShrU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ShrU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ShrU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4ShrU.toString|toString(){}[0]
    }

    final object I32x4Sub : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Sub|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Sub.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Sub.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4Sub.toString|toString(){}[0]
    }

    final object I32x4TruncSatF32x4S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF32x4S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF32x4S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF32x4S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF32x4S.toString|toString(){}[0]
    }

    final object I32x4TruncSatF32x4U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF32x4U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF32x4U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF32x4U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF32x4U.toString|toString(){}[0]
    }

    final object I32x4TruncSatF64x2SZero : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF64x2SZero|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF64x2SZero.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF64x2SZero.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF64x2SZero.toString|toString(){}[0]
    }

    final object I32x4TruncSatF64x2UZero : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF64x2UZero|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF64x2UZero.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF64x2UZero.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I32x4TruncSatF64x2UZero.toString|toString(){}[0]
    }

    final object I64x2Abs : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Abs|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Abs.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Abs.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Abs.toString|toString(){}[0]
    }

    final object I64x2Add : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Add|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Add.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Add.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Add.toString|toString(){}[0]
    }

    final object I64x2AllTrue : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2AllTrue|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2AllTrue.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2AllTrue.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2AllTrue.toString|toString(){}[0]
    }

    final object I64x2Bitmask : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Bitmask|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Bitmask.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Bitmask.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Bitmask.toString|toString(){}[0]
    }

    final object I64x2Eq : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Eq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Eq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Eq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Eq.toString|toString(){}[0]
    }

    final object I64x2ExtendHighI32x4S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendHighI32x4S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendHighI32x4S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendHighI32x4S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendHighI32x4S.toString|toString(){}[0]
    }

    final object I64x2ExtendHighI32x4U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendHighI32x4U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendHighI32x4U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendHighI32x4U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendHighI32x4U.toString|toString(){}[0]
    }

    final object I64x2ExtendLowI32x4S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendLowI32x4S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendLowI32x4S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendLowI32x4S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendLowI32x4S.toString|toString(){}[0]
    }

    final object I64x2ExtendLowI32x4U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendLowI32x4U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendLowI32x4U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendLowI32x4U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtendLowI32x4U.toString|toString(){}[0]
    }

    final object I64x2ExtmulHighI32x4S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulHighI32x4S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulHighI32x4S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulHighI32x4S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulHighI32x4S.toString|toString(){}[0]
    }

    final object I64x2ExtmulHighI32x4U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulHighI32x4U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulHighI32x4U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulHighI32x4U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulHighI32x4U.toString|toString(){}[0]
    }

    final object I64x2ExtmulLowI32x4S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulLowI32x4S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulLowI32x4S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulLowI32x4S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulLowI32x4S.toString|toString(){}[0]
    }

    final object I64x2ExtmulLowI32x4U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulLowI32x4U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulLowI32x4U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulLowI32x4U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ExtmulLowI32x4U.toString|toString(){}[0]
    }

    final object I64x2GeS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2GeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2GeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2GeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2GeS.toString|toString(){}[0]
    }

    final object I64x2GtS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2GtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2GtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2GtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2GtS.toString|toString(){}[0]
    }

    final object I64x2LeS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2LeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2LeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2LeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2LeS.toString|toString(){}[0]
    }

    final object I64x2LtS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2LtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2LtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2LtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2LtS.toString|toString(){}[0]
    }

    final object I64x2Mul : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Mul|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Mul.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Mul.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Mul.toString|toString(){}[0]
    }

    final object I64x2Ne : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Ne|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Ne.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Ne.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Ne.toString|toString(){}[0]
    }

    final object I64x2Neg : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Neg|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Neg.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Neg.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Neg.toString|toString(){}[0]
    }

    final object I64x2Shl : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Shl|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Shl.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Shl.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Shl.toString|toString(){}[0]
    }

    final object I64x2ShrS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ShrS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ShrS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ShrS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ShrS.toString|toString(){}[0]
    }

    final object I64x2ShrU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ShrU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ShrU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ShrU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2ShrU.toString|toString(){}[0]
    }

    final object I64x2Sub : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Sub|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Sub.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Sub.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I64x2Sub.toString|toString(){}[0]
    }

    final object I8x16Abs : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Abs|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Abs.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Abs.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Abs.toString|toString(){}[0]
    }

    final object I8x16Add : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Add|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Add.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Add.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Add.toString|toString(){}[0]
    }

    final object I8x16AddSatS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AddSatS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AddSatS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AddSatS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AddSatS.toString|toString(){}[0]
    }

    final object I8x16AddSatU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AddSatU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AddSatU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AddSatU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AddSatU.toString|toString(){}[0]
    }

    final object I8x16AllTrue : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AllTrue|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AllTrue.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AllTrue.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AllTrue.toString|toString(){}[0]
    }

    final object I8x16AvgrU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AvgrU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AvgrU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AvgrU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16AvgrU.toString|toString(){}[0]
    }

    final object I8x16Bitmask : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Bitmask|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Bitmask.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Bitmask.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Bitmask.toString|toString(){}[0]
    }

    final object I8x16Eq : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Eq|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Eq.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Eq.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Eq.toString|toString(){}[0]
    }

    final object I8x16GeS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GeS.toString|toString(){}[0]
    }

    final object I8x16GeU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GeU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GeU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GeU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GeU.toString|toString(){}[0]
    }

    final object I8x16GtS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GtS.toString|toString(){}[0]
    }

    final object I8x16GtU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GtU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GtU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GtU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16GtU.toString|toString(){}[0]
    }

    final object I8x16LeS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LeS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LeS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LeS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LeS.toString|toString(){}[0]
    }

    final object I8x16LeU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LeU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LeU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LeU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LeU.toString|toString(){}[0]
    }

    final object I8x16LtS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LtS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LtS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LtS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LtS.toString|toString(){}[0]
    }

    final object I8x16LtU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LtU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LtU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LtU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16LtU.toString|toString(){}[0]
    }

    final object I8x16MaxS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MaxS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MaxS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MaxS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MaxS.toString|toString(){}[0]
    }

    final object I8x16MaxU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MaxU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MaxU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MaxU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MaxU.toString|toString(){}[0]
    }

    final object I8x16MinS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MinS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MinS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MinS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MinS.toString|toString(){}[0]
    }

    final object I8x16MinU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MinU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MinU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MinU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16MinU.toString|toString(){}[0]
    }

    final object I8x16NarrowI16x8S : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16NarrowI16x8S|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16NarrowI16x8S.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16NarrowI16x8S.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16NarrowI16x8S.toString|toString(){}[0]
    }

    final object I8x16NarrowI16x8U : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16NarrowI16x8U|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16NarrowI16x8U.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16NarrowI16x8U.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16NarrowI16x8U.toString|toString(){}[0]
    }

    final object I8x16Ne : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Ne|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Ne.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Ne.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Ne.toString|toString(){}[0]
    }

    final object I8x16Neg : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Neg|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Neg.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Neg.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Neg.toString|toString(){}[0]
    }

    final object I8x16Popcnt : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Popcnt|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Popcnt.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Popcnt.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Popcnt.toString|toString(){}[0]
    }

    final object I8x16Shl : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shl|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shl.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shl.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Shl.toString|toString(){}[0]
    }

    final object I8x16ShrS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ShrS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ShrS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ShrS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ShrS.toString|toString(){}[0]
    }

    final object I8x16ShrU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ShrU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ShrU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ShrU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16ShrU.toString|toString(){}[0]
    }

    final object I8x16Sub : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Sub|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Sub.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Sub.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16Sub.toString|toString(){}[0]
    }

    final object I8x16SubSatS : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16SubSatS|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16SubSatS.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16SubSatS.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16SubSatS.toString|toString(){}[0]
    }

    final object I8x16SubSatU : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16SubSatU|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16SubSatU.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16SubSatU.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.I8x16SubSatU.toString|toString(){}[0]
    }

    final object V128And : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128And|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128And.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128And.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128And.toString|toString(){}[0]
    }

    final object V128AndNot : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128AndNot|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128AndNot.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128AndNot.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128AndNot.toString|toString(){}[0]
    }

    final object V128AnyTrue : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128AnyTrue|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128AnyTrue.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128AnyTrue.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128AnyTrue.toString|toString(){}[0]
    }

    final object V128Bitselect : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Bitselect|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Bitselect.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Bitselect.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Bitselect.toString|toString(){}[0]
    }

    final object V128Not : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Not|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Not.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Not.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Not.toString|toString(){}[0]
    }

    final object V128Or : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Or|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Or.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Or.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Or.toString|toString(){}[0]
    }

    final object V128Xor : io.github.charlietap.chasm.ast.instruction/VectorInstruction { // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Xor|null[0]
        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Xor.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Xor.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/VectorInstruction.V128Xor.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.module/Custom // io.github.charlietap.chasm.ast.module/Custom|null[0]

sealed interface io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index|null[0]
    abstract val idx // io.github.charlietap.chasm.ast.module/Index.idx|{}idx[0]
        abstract fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.idx.<get-idx>|<get-idx>(){}[0]

    final value class DataIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.DataIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.DataIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.DataIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.DataIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.DataIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.DataIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.DataIndex.toString|toString(){}[0]
    }

    final value class ElementIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.ElementIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.ElementIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.ElementIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.ElementIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.ElementIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.ElementIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.ElementIndex.toString|toString(){}[0]
    }

    final value class FieldIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.FieldIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.FieldIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.FieldIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.FieldIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.FieldIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.FieldIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.FieldIndex.toString|toString(){}[0]
    }

    final value class FunctionIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.FunctionIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.FunctionIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.FunctionIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.FunctionIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.FunctionIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.FunctionIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.FunctionIndex.toString|toString(){}[0]
    }

    final value class GlobalIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.GlobalIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.GlobalIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.GlobalIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.GlobalIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.GlobalIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.GlobalIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.GlobalIndex.toString|toString(){}[0]
    }

    final value class LabelIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.LabelIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.LabelIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.LabelIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.LabelIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.LabelIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.LabelIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.LabelIndex.toString|toString(){}[0]
    }

    final value class LocalIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.LocalIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.LocalIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.LocalIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.LocalIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.LocalIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.LocalIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.LocalIndex.toString|toString(){}[0]
    }

    final value class MemoryIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.MemoryIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.MemoryIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.MemoryIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.MemoryIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.MemoryIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.MemoryIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.MemoryIndex.toString|toString(){}[0]
    }

    final value class TableIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.TableIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.TableIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.TableIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.TableIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.TableIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.TableIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.TableIndex.toString|toString(){}[0]
    }

    final value class TagIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.TagIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.TagIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.TagIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.TagIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.TagIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.TagIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.TagIndex.toString|toString(){}[0]
    }

    final value class TypeIndex : io.github.charlietap.chasm.ast.module/Index { // io.github.charlietap.chasm.ast.module/Index.TypeIndex|null[0]
        constructor <init>(kotlin/UInt) // io.github.charlietap.chasm.ast.module/Index.TypeIndex.<init>|<init>(kotlin.UInt){}[0]

        final val idx // io.github.charlietap.chasm.ast.module/Index.TypeIndex.idx|{}idx[0]
            final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/Index.TypeIndex.idx.<get-idx>|<get-idx>(){}[0]

        final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Index.TypeIndex.equals|equals(kotlin.Any?){}[0]
        final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Index.TypeIndex.hashCode|hashCode(){}[0]
        final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Index.TypeIndex.toString|toString(){}[0]
    }
}

sealed interface io.github.charlietap.chasm.ast.module/NameSubsection // io.github.charlietap.chasm.ast.module/NameSubsection|null[0]

sealed interface io.github.charlietap.chasm.ast.value/Value // io.github.charlietap.chasm.ast.value/Value|null[0]

final class io.github.charlietap.chasm.ast.instruction/MemArg { // io.github.charlietap.chasm.ast.instruction/MemArg|null[0]
    constructor <init>(kotlin/UInt, kotlin/ULong) // io.github.charlietap.chasm.ast.instruction/MemArg.<init>|<init>(kotlin.UInt;kotlin.ULong){}[0]

    final val align // io.github.charlietap.chasm.ast.instruction/MemArg.align|{}align[0]
        final fun <get-align>(): kotlin/UInt // io.github.charlietap.chasm.ast.instruction/MemArg.align.<get-align>|<get-align>(){}[0]
    final val offset // io.github.charlietap.chasm.ast.instruction/MemArg.offset|{}offset[0]
        final fun <get-offset>(): kotlin/ULong // io.github.charlietap.chasm.ast.instruction/MemArg.offset.<get-offset>|<get-offset>(){}[0]

    final fun component1(): kotlin/UInt // io.github.charlietap.chasm.ast.instruction/MemArg.component1|component1(){}[0]
    final fun component2(): kotlin/ULong // io.github.charlietap.chasm.ast.instruction/MemArg.component2|component2(){}[0]
    final fun copy(kotlin/UInt = ..., kotlin/ULong = ...): io.github.charlietap.chasm.ast.instruction/MemArg // io.github.charlietap.chasm.ast.instruction/MemArg.copy|copy(kotlin.UInt;kotlin.ULong){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/MemArg.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/MemArg.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/MemArg.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/DataSegment { // io.github.charlietap.chasm.ast.module/DataSegment|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Index.DataIndex, kotlin/UByteArray, io.github.charlietap.chasm.ast.module/DataSegment.Mode) // io.github.charlietap.chasm.ast.module/DataSegment.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.DataIndex;kotlin.UByteArray;io.github.charlietap.chasm.ast.module.DataSegment.Mode){}[0]

    final val idx // io.github.charlietap.chasm.ast.module/DataSegment.idx|{}idx[0]
        final fun <get-idx>(): io.github.charlietap.chasm.ast.module/Index.DataIndex // io.github.charlietap.chasm.ast.module/DataSegment.idx.<get-idx>|<get-idx>(){}[0]
    final val initData // io.github.charlietap.chasm.ast.module/DataSegment.initData|{}initData[0]
        final fun <get-initData>(): kotlin/UByteArray // io.github.charlietap.chasm.ast.module/DataSegment.initData.<get-initData>|<get-initData>(){}[0]
    final val mode // io.github.charlietap.chasm.ast.module/DataSegment.mode|{}mode[0]
        final fun <get-mode>(): io.github.charlietap.chasm.ast.module/DataSegment.Mode // io.github.charlietap.chasm.ast.module/DataSegment.mode.<get-mode>|<get-mode>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.module/Index.DataIndex // io.github.charlietap.chasm.ast.module/DataSegment.component1|component1(){}[0]
    final fun component2(): kotlin/UByteArray // io.github.charlietap.chasm.ast.module/DataSegment.component2|component2(){}[0]
    final fun component3(): io.github.charlietap.chasm.ast.module/DataSegment.Mode // io.github.charlietap.chasm.ast.module/DataSegment.component3|component3(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.module/Index.DataIndex = ..., kotlin/UByteArray = ..., io.github.charlietap.chasm.ast.module/DataSegment.Mode = ...): io.github.charlietap.chasm.ast.module/DataSegment // io.github.charlietap.chasm.ast.module/DataSegment.copy|copy(io.github.charlietap.chasm.ast.module.Index.DataIndex;kotlin.UByteArray;io.github.charlietap.chasm.ast.module.DataSegment.Mode){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/DataSegment.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/DataSegment.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/DataSegment.toString|toString(){}[0]

    sealed interface Mode { // io.github.charlietap.chasm.ast.module/DataSegment.Mode|null[0]
        final class Active : io.github.charlietap.chasm.ast.module/DataSegment.Mode { // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.ast.instruction/Expression) // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.Expression){}[0]

            final val memoryIndex // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]
            final val offset // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.offset|{}offset[0]
                final fun <get-offset>(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.offset.<get-offset>|<get-offset>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.ast.instruction/Expression = ...): io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.ast.instruction.Expression){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Active.toString|toString(){}[0]
        }

        final object Passive : io.github.charlietap.chasm.ast.module/DataSegment.Mode { // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Passive|null[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Passive.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Passive.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/DataSegment.Mode.Passive.toString|toString(){}[0]
        }
    }
}

final class io.github.charlietap.chasm.ast.module/ElementSegment { // io.github.charlietap.chasm.ast.module/ElementSegment|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Index.ElementIndex, io.github.charlietap.chasm.type/ReferenceType, kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Expression>, io.github.charlietap.chasm.ast.module/ElementSegment.Mode) // io.github.charlietap.chasm.ast.module/ElementSegment.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.ElementIndex;io.github.charlietap.chasm.type.ReferenceType;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Expression>;io.github.charlietap.chasm.ast.module.ElementSegment.Mode){}[0]

    final val idx // io.github.charlietap.chasm.ast.module/ElementSegment.idx|{}idx[0]
        final fun <get-idx>(): io.github.charlietap.chasm.ast.module/Index.ElementIndex // io.github.charlietap.chasm.ast.module/ElementSegment.idx.<get-idx>|<get-idx>(){}[0]
    final val initExpressions // io.github.charlietap.chasm.ast.module/ElementSegment.initExpressions|{}initExpressions[0]
        final fun <get-initExpressions>(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Expression> // io.github.charlietap.chasm.ast.module/ElementSegment.initExpressions.<get-initExpressions>|<get-initExpressions>(){}[0]
    final val mode // io.github.charlietap.chasm.ast.module/ElementSegment.mode|{}mode[0]
        final fun <get-mode>(): io.github.charlietap.chasm.ast.module/ElementSegment.Mode // io.github.charlietap.chasm.ast.module/ElementSegment.mode.<get-mode>|<get-mode>(){}[0]
    final val type // io.github.charlietap.chasm.ast.module/ElementSegment.type|{}type[0]
        final fun <get-type>(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.module/ElementSegment.type.<get-type>|<get-type>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.module/Index.ElementIndex // io.github.charlietap.chasm.ast.module/ElementSegment.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.type/ReferenceType // io.github.charlietap.chasm.ast.module/ElementSegment.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Expression> // io.github.charlietap.chasm.ast.module/ElementSegment.component3|component3(){}[0]
    final fun component4(): io.github.charlietap.chasm.ast.module/ElementSegment.Mode // io.github.charlietap.chasm.ast.module/ElementSegment.component4|component4(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.module/Index.ElementIndex = ..., io.github.charlietap.chasm.type/ReferenceType = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Expression> = ..., io.github.charlietap.chasm.ast.module/ElementSegment.Mode = ...): io.github.charlietap.chasm.ast.module/ElementSegment // io.github.charlietap.chasm.ast.module/ElementSegment.copy|copy(io.github.charlietap.chasm.ast.module.Index.ElementIndex;io.github.charlietap.chasm.type.ReferenceType;kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Expression>;io.github.charlietap.chasm.ast.module.ElementSegment.Mode){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/ElementSegment.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/ElementSegment.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/ElementSegment.toString|toString(){}[0]

    sealed interface Mode { // io.github.charlietap.chasm.ast.module/ElementSegment.Mode|null[0]
        final class Active : io.github.charlietap.chasm.ast.module/ElementSegment.Mode { // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.TableIndex, io.github.charlietap.chasm.ast.instruction/Expression) // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TableIndex;io.github.charlietap.chasm.ast.instruction.Expression){}[0]

            final val offsetExpr // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.offsetExpr|{}offsetExpr[0]
                final fun <get-offsetExpr>(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.offsetExpr.<get-offsetExpr>|<get-offsetExpr>(){}[0]
            final val tableIndex // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.tableIndex|{}tableIndex[0]
                final fun <get-tableIndex>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.tableIndex.<get-tableIndex>|<get-tableIndex>(){}[0]

            final fun component1(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.component1|component1(){}[0]
            final fun component2(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.component2|component2(){}[0]
            final fun copy(io.github.charlietap.chasm.ast.module/Index.TableIndex = ..., io.github.charlietap.chasm.ast.instruction/Expression = ...): io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.copy|copy(io.github.charlietap.chasm.ast.module.Index.TableIndex;io.github.charlietap.chasm.ast.instruction.Expression){}[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Active.toString|toString(){}[0]
        }

        final object Declarative : io.github.charlietap.chasm.ast.module/ElementSegment.Mode { // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Declarative|null[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Declarative.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Declarative.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Declarative.toString|toString(){}[0]
        }

        final object Passive : io.github.charlietap.chasm.ast.module/ElementSegment.Mode { // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Passive|null[0]
            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Passive.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Passive.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/ElementSegment.Mode.Passive.toString|toString(){}[0]
        }
    }
}

final class io.github.charlietap.chasm.ast.module/Export { // io.github.charlietap.chasm.ast.module/Export|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.value/NameValue, io.github.charlietap.chasm.ast.module/Export.Descriptor) // io.github.charlietap.chasm.ast.module/Export.<init>|<init>(io.github.charlietap.chasm.ast.value.NameValue;io.github.charlietap.chasm.ast.module.Export.Descriptor){}[0]

    final val descriptor // io.github.charlietap.chasm.ast.module/Export.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): io.github.charlietap.chasm.ast.module/Export.Descriptor // io.github.charlietap.chasm.ast.module/Export.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    final val name // io.github.charlietap.chasm.ast.module/Export.name|{}name[0]
        final fun <get-name>(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/Export.name.<get-name>|<get-name>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/Export.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.ast.module/Export.Descriptor // io.github.charlietap.chasm.ast.module/Export.component2|component2(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.value/NameValue = ..., io.github.charlietap.chasm.ast.module/Export.Descriptor = ...): io.github.charlietap.chasm.ast.module/Export // io.github.charlietap.chasm.ast.module/Export.copy|copy(io.github.charlietap.chasm.ast.value.NameValue;io.github.charlietap.chasm.ast.module.Export.Descriptor){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Export.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Export.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Export.toString|toString(){}[0]

    sealed interface Descriptor { // io.github.charlietap.chasm.ast.module/Export.Descriptor|null[0]
        final value class Function : io.github.charlietap.chasm.ast.module/Export.Descriptor { // io.github.charlietap.chasm.ast.module/Export.Descriptor.Function|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.FunctionIndex) // io.github.charlietap.chasm.ast.module/Export.Descriptor.Function.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.FunctionIndex){}[0]

            final val functionIndex // io.github.charlietap.chasm.ast.module/Export.Descriptor.Function.functionIndex|{}functionIndex[0]
                final fun <get-functionIndex>(): io.github.charlietap.chasm.ast.module/Index.FunctionIndex // io.github.charlietap.chasm.ast.module/Export.Descriptor.Function.functionIndex.<get-functionIndex>|<get-functionIndex>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Export.Descriptor.Function.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Export.Descriptor.Function.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Export.Descriptor.Function.toString|toString(){}[0]
        }

        final value class Global : io.github.charlietap.chasm.ast.module/Export.Descriptor { // io.github.charlietap.chasm.ast.module/Export.Descriptor.Global|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.GlobalIndex) // io.github.charlietap.chasm.ast.module/Export.Descriptor.Global.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.GlobalIndex){}[0]

            final val globalIndex // io.github.charlietap.chasm.ast.module/Export.Descriptor.Global.globalIndex|{}globalIndex[0]
                final fun <get-globalIndex>(): io.github.charlietap.chasm.ast.module/Index.GlobalIndex // io.github.charlietap.chasm.ast.module/Export.Descriptor.Global.globalIndex.<get-globalIndex>|<get-globalIndex>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Export.Descriptor.Global.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Export.Descriptor.Global.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Export.Descriptor.Global.toString|toString(){}[0]
        }

        final value class Memory : io.github.charlietap.chasm.ast.module/Export.Descriptor { // io.github.charlietap.chasm.ast.module/Export.Descriptor.Memory|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex) // io.github.charlietap.chasm.ast.module/Export.Descriptor.Memory.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex){}[0]

            final val memoryIndex // io.github.charlietap.chasm.ast.module/Export.Descriptor.Memory.memoryIndex|{}memoryIndex[0]
                final fun <get-memoryIndex>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.module/Export.Descriptor.Memory.memoryIndex.<get-memoryIndex>|<get-memoryIndex>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Export.Descriptor.Memory.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Export.Descriptor.Memory.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Export.Descriptor.Memory.toString|toString(){}[0]
        }

        final value class Table : io.github.charlietap.chasm.ast.module/Export.Descriptor { // io.github.charlietap.chasm.ast.module/Export.Descriptor.Table|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.TableIndex) // io.github.charlietap.chasm.ast.module/Export.Descriptor.Table.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TableIndex){}[0]

            final val tableIndex // io.github.charlietap.chasm.ast.module/Export.Descriptor.Table.tableIndex|{}tableIndex[0]
                final fun <get-tableIndex>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.module/Export.Descriptor.Table.tableIndex.<get-tableIndex>|<get-tableIndex>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Export.Descriptor.Table.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Export.Descriptor.Table.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Export.Descriptor.Table.toString|toString(){}[0]
        }

        final value class Tag : io.github.charlietap.chasm.ast.module/Export.Descriptor { // io.github.charlietap.chasm.ast.module/Export.Descriptor.Tag|null[0]
            constructor <init>(io.github.charlietap.chasm.ast.module/Index.TagIndex) // io.github.charlietap.chasm.ast.module/Export.Descriptor.Tag.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TagIndex){}[0]

            final val tagIndex // io.github.charlietap.chasm.ast.module/Export.Descriptor.Tag.tagIndex|{}tagIndex[0]
                final fun <get-tagIndex>(): io.github.charlietap.chasm.ast.module/Index.TagIndex // io.github.charlietap.chasm.ast.module/Export.Descriptor.Tag.tagIndex.<get-tagIndex>|<get-tagIndex>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Export.Descriptor.Tag.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Export.Descriptor.Tag.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Export.Descriptor.Tag.toString|toString(){}[0]
        }
    }
}

final class io.github.charlietap.chasm.ast.module/FieldNameSubsection : io.github.charlietap.chasm.ast.module/NameSubsection { // io.github.charlietap.chasm.ast.module/FieldNameSubsection|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation>) // io.github.charlietap.chasm.ast.module/FieldNameSubsection.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.IndirectNameAssociation>){}[0]

    final val indirectNameMap // io.github.charlietap.chasm.ast.module/FieldNameSubsection.indirectNameMap|{}indirectNameMap[0]
        final fun <get-indirectNameMap>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation> // io.github.charlietap.chasm.ast.module/FieldNameSubsection.indirectNameMap.<get-indirectNameMap>|<get-indirectNameMap>(){}[0]

    final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation> // io.github.charlietap.chasm.ast.module/FieldNameSubsection.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation> = ...): io.github.charlietap.chasm.ast.module/FieldNameSubsection // io.github.charlietap.chasm.ast.module/FieldNameSubsection.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.IndirectNameAssociation>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/FieldNameSubsection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/FieldNameSubsection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/FieldNameSubsection.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/Function { // io.github.charlietap.chasm.ast.module/Function|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Index.FunctionIndex, io.github.charlietap.chasm.ast.module/Index.TypeIndex, kotlin.collections/List<io.github.charlietap.chasm.ast.module/Local>, io.github.charlietap.chasm.ast.instruction/Expression) // io.github.charlietap.chasm.ast.module/Function.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.FunctionIndex;io.github.charlietap.chasm.ast.module.Index.TypeIndex;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Local>;io.github.charlietap.chasm.ast.instruction.Expression){}[0]

    final val body // io.github.charlietap.chasm.ast.module/Function.body|{}body[0]
        final fun <get-body>(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.module/Function.body.<get-body>|<get-body>(){}[0]
    final val idx // io.github.charlietap.chasm.ast.module/Function.idx|{}idx[0]
        final fun <get-idx>(): io.github.charlietap.chasm.ast.module/Index.FunctionIndex // io.github.charlietap.chasm.ast.module/Function.idx.<get-idx>|<get-idx>(){}[0]
    final val locals // io.github.charlietap.chasm.ast.module/Function.locals|{}locals[0]
        final fun <get-locals>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Local> // io.github.charlietap.chasm.ast.module/Function.locals.<get-locals>|<get-locals>(){}[0]
    final val typeIndex // io.github.charlietap.chasm.ast.module/Function.typeIndex|{}typeIndex[0]
        final fun <get-typeIndex>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.module/Function.typeIndex.<get-typeIndex>|<get-typeIndex>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.module/Index.FunctionIndex // io.github.charlietap.chasm.ast.module/Function.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.module/Function.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Local> // io.github.charlietap.chasm.ast.module/Function.component3|component3(){}[0]
    final fun component4(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.module/Function.component4|component4(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.module/Index.FunctionIndex = ..., io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/Local> = ..., io.github.charlietap.chasm.ast.instruction/Expression = ...): io.github.charlietap.chasm.ast.module/Function // io.github.charlietap.chasm.ast.module/Function.copy|copy(io.github.charlietap.chasm.ast.module.Index.FunctionIndex;io.github.charlietap.chasm.ast.module.Index.TypeIndex;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Local>;io.github.charlietap.chasm.ast.instruction.Expression){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Function.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Function.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Function.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/FunctionNameSubsection : io.github.charlietap.chasm.ast.module/NameSubsection { // io.github.charlietap.chasm.ast.module/FunctionNameSubsection|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation>) // io.github.charlietap.chasm.ast.module/FunctionNameSubsection.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]

    final val nameMap // io.github.charlietap.chasm.ast.module/FunctionNameSubsection.nameMap|{}nameMap[0]
        final fun <get-nameMap>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/FunctionNameSubsection.nameMap.<get-nameMap>|<get-nameMap>(){}[0]

    final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/FunctionNameSubsection.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> = ...): io.github.charlietap.chasm.ast.module/FunctionNameSubsection // io.github.charlietap.chasm.ast.module/FunctionNameSubsection.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/FunctionNameSubsection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/FunctionNameSubsection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/FunctionNameSubsection.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/Global { // io.github.charlietap.chasm.ast.module/Global|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Index.GlobalIndex, io.github.charlietap.chasm.type/GlobalType, io.github.charlietap.chasm.ast.instruction/Expression) // io.github.charlietap.chasm.ast.module/Global.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.GlobalIndex;io.github.charlietap.chasm.type.GlobalType;io.github.charlietap.chasm.ast.instruction.Expression){}[0]

    final val idx // io.github.charlietap.chasm.ast.module/Global.idx|{}idx[0]
        final fun <get-idx>(): io.github.charlietap.chasm.ast.module/Index.GlobalIndex // io.github.charlietap.chasm.ast.module/Global.idx.<get-idx>|<get-idx>(){}[0]
    final val initExpression // io.github.charlietap.chasm.ast.module/Global.initExpression|{}initExpression[0]
        final fun <get-initExpression>(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.module/Global.initExpression.<get-initExpression>|<get-initExpression>(){}[0]
    final val type // io.github.charlietap.chasm.ast.module/Global.type|{}type[0]
        final fun <get-type>(): io.github.charlietap.chasm.type/GlobalType // io.github.charlietap.chasm.ast.module/Global.type.<get-type>|<get-type>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.module/Index.GlobalIndex // io.github.charlietap.chasm.ast.module/Global.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.type/GlobalType // io.github.charlietap.chasm.ast.module/Global.component2|component2(){}[0]
    final fun component3(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.module/Global.component3|component3(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.module/Index.GlobalIndex = ..., io.github.charlietap.chasm.type/GlobalType = ..., io.github.charlietap.chasm.ast.instruction/Expression = ...): io.github.charlietap.chasm.ast.module/Global // io.github.charlietap.chasm.ast.module/Global.copy|copy(io.github.charlietap.chasm.ast.module.Index.GlobalIndex;io.github.charlietap.chasm.type.GlobalType;io.github.charlietap.chasm.ast.instruction.Expression){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Global.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Global.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Global.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/GlobalNameSubsection : io.github.charlietap.chasm.ast.module/NameSubsection { // io.github.charlietap.chasm.ast.module/GlobalNameSubsection|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation>) // io.github.charlietap.chasm.ast.module/GlobalNameSubsection.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]

    final val nameMap // io.github.charlietap.chasm.ast.module/GlobalNameSubsection.nameMap|{}nameMap[0]
        final fun <get-nameMap>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/GlobalNameSubsection.nameMap.<get-nameMap>|<get-nameMap>(){}[0]

    final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/GlobalNameSubsection.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> = ...): io.github.charlietap.chasm.ast.module/GlobalNameSubsection // io.github.charlietap.chasm.ast.module/GlobalNameSubsection.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/GlobalNameSubsection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/GlobalNameSubsection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/GlobalNameSubsection.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/Import { // io.github.charlietap.chasm.ast.module/Import|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.value/NameValue, io.github.charlietap.chasm.ast.value/NameValue, io.github.charlietap.chasm.ast.module/Import.Descriptor) // io.github.charlietap.chasm.ast.module/Import.<init>|<init>(io.github.charlietap.chasm.ast.value.NameValue;io.github.charlietap.chasm.ast.value.NameValue;io.github.charlietap.chasm.ast.module.Import.Descriptor){}[0]

    final val descriptor // io.github.charlietap.chasm.ast.module/Import.descriptor|{}descriptor[0]
        final fun <get-descriptor>(): io.github.charlietap.chasm.ast.module/Import.Descriptor // io.github.charlietap.chasm.ast.module/Import.descriptor.<get-descriptor>|<get-descriptor>(){}[0]
    final val entityName // io.github.charlietap.chasm.ast.module/Import.entityName|{}entityName[0]
        final fun <get-entityName>(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/Import.entityName.<get-entityName>|<get-entityName>(){}[0]
    final val moduleName // io.github.charlietap.chasm.ast.module/Import.moduleName|{}moduleName[0]
        final fun <get-moduleName>(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/Import.moduleName.<get-moduleName>|<get-moduleName>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/Import.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/Import.component2|component2(){}[0]
    final fun component3(): io.github.charlietap.chasm.ast.module/Import.Descriptor // io.github.charlietap.chasm.ast.module/Import.component3|component3(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.value/NameValue = ..., io.github.charlietap.chasm.ast.value/NameValue = ..., io.github.charlietap.chasm.ast.module/Import.Descriptor = ...): io.github.charlietap.chasm.ast.module/Import // io.github.charlietap.chasm.ast.module/Import.copy|copy(io.github.charlietap.chasm.ast.value.NameValue;io.github.charlietap.chasm.ast.value.NameValue;io.github.charlietap.chasm.ast.module.Import.Descriptor){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Import.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Import.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Import.toString|toString(){}[0]

    sealed interface Descriptor { // io.github.charlietap.chasm.ast.module/Import.Descriptor|null[0]
        final value class Function : io.github.charlietap.chasm.ast.module/Import.Descriptor { // io.github.charlietap.chasm.ast.module/Import.Descriptor.Function|null[0]
            constructor <init>(io.github.charlietap.chasm.type/DefinedType) // io.github.charlietap.chasm.ast.module/Import.Descriptor.Function.<init>|<init>(io.github.charlietap.chasm.type.DefinedType){}[0]

            final val type // io.github.charlietap.chasm.ast.module/Import.Descriptor.Function.type|{}type[0]
                final fun <get-type>(): io.github.charlietap.chasm.type/DefinedType // io.github.charlietap.chasm.ast.module/Import.Descriptor.Function.type.<get-type>|<get-type>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Import.Descriptor.Function.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Import.Descriptor.Function.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Import.Descriptor.Function.toString|toString(){}[0]
        }

        final value class Global : io.github.charlietap.chasm.ast.module/Import.Descriptor { // io.github.charlietap.chasm.ast.module/Import.Descriptor.Global|null[0]
            constructor <init>(io.github.charlietap.chasm.type/GlobalType) // io.github.charlietap.chasm.ast.module/Import.Descriptor.Global.<init>|<init>(io.github.charlietap.chasm.type.GlobalType){}[0]

            final val type // io.github.charlietap.chasm.ast.module/Import.Descriptor.Global.type|{}type[0]
                final fun <get-type>(): io.github.charlietap.chasm.type/GlobalType // io.github.charlietap.chasm.ast.module/Import.Descriptor.Global.type.<get-type>|<get-type>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Import.Descriptor.Global.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Import.Descriptor.Global.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Import.Descriptor.Global.toString|toString(){}[0]
        }

        final value class Memory : io.github.charlietap.chasm.ast.module/Import.Descriptor { // io.github.charlietap.chasm.ast.module/Import.Descriptor.Memory|null[0]
            constructor <init>(io.github.charlietap.chasm.type/MemoryType) // io.github.charlietap.chasm.ast.module/Import.Descriptor.Memory.<init>|<init>(io.github.charlietap.chasm.type.MemoryType){}[0]

            final val type // io.github.charlietap.chasm.ast.module/Import.Descriptor.Memory.type|{}type[0]
                final fun <get-type>(): io.github.charlietap.chasm.type/MemoryType // io.github.charlietap.chasm.ast.module/Import.Descriptor.Memory.type.<get-type>|<get-type>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Import.Descriptor.Memory.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Import.Descriptor.Memory.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Import.Descriptor.Memory.toString|toString(){}[0]
        }

        final value class Table : io.github.charlietap.chasm.ast.module/Import.Descriptor { // io.github.charlietap.chasm.ast.module/Import.Descriptor.Table|null[0]
            constructor <init>(io.github.charlietap.chasm.type/TableType) // io.github.charlietap.chasm.ast.module/Import.Descriptor.Table.<init>|<init>(io.github.charlietap.chasm.type.TableType){}[0]

            final val type // io.github.charlietap.chasm.ast.module/Import.Descriptor.Table.type|{}type[0]
                final fun <get-type>(): io.github.charlietap.chasm.type/TableType // io.github.charlietap.chasm.ast.module/Import.Descriptor.Table.type.<get-type>|<get-type>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Import.Descriptor.Table.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Import.Descriptor.Table.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Import.Descriptor.Table.toString|toString(){}[0]
        }

        final value class Tag : io.github.charlietap.chasm.ast.module/Import.Descriptor { // io.github.charlietap.chasm.ast.module/Import.Descriptor.Tag|null[0]
            constructor <init>(io.github.charlietap.chasm.type/TagType) // io.github.charlietap.chasm.ast.module/Import.Descriptor.Tag.<init>|<init>(io.github.charlietap.chasm.type.TagType){}[0]

            final val type // io.github.charlietap.chasm.ast.module/Import.Descriptor.Tag.type|{}type[0]
                final fun <get-type>(): io.github.charlietap.chasm.type/TagType // io.github.charlietap.chasm.ast.module/Import.Descriptor.Tag.type.<get-type>|<get-type>(){}[0]

            final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Import.Descriptor.Tag.equals|equals(kotlin.Any?){}[0]
            final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Import.Descriptor.Tag.hashCode|hashCode(){}[0]
            final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Import.Descriptor.Tag.toString|toString(){}[0]
        }
    }
}

final class io.github.charlietap.chasm.ast.module/IndirectNameAssociation { // io.github.charlietap.chasm.ast.module/IndirectNameAssociation|null[0]
    constructor <init>(kotlin/UInt, kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation>) // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.<init>|<init>(kotlin.UInt;kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]

    final val idx // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.idx|{}idx[0]
        final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.idx.<get-idx>|<get-idx>(){}[0]
    final val nameMap // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.nameMap|{}nameMap[0]
        final fun <get-nameMap>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.nameMap.<get-nameMap>|<get-nameMap>(){}[0]

    final fun component1(): kotlin/UInt // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.component1|component1(){}[0]
    final fun component2(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.component2|component2(){}[0]
    final fun copy(kotlin/UInt = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> = ...): io.github.charlietap.chasm.ast.module/IndirectNameAssociation // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.copy|copy(kotlin.UInt;kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/IndirectNameAssociation.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/LabelNameSubsection : io.github.charlietap.chasm.ast.module/NameSubsection { // io.github.charlietap.chasm.ast.module/LabelNameSubsection|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation>) // io.github.charlietap.chasm.ast.module/LabelNameSubsection.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.IndirectNameAssociation>){}[0]

    final val indirectNameMap // io.github.charlietap.chasm.ast.module/LabelNameSubsection.indirectNameMap|{}indirectNameMap[0]
        final fun <get-indirectNameMap>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation> // io.github.charlietap.chasm.ast.module/LabelNameSubsection.indirectNameMap.<get-indirectNameMap>|<get-indirectNameMap>(){}[0]

    final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation> // io.github.charlietap.chasm.ast.module/LabelNameSubsection.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation> = ...): io.github.charlietap.chasm.ast.module/LabelNameSubsection // io.github.charlietap.chasm.ast.module/LabelNameSubsection.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.IndirectNameAssociation>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/LabelNameSubsection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/LabelNameSubsection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/LabelNameSubsection.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/Local { // io.github.charlietap.chasm.ast.module/Local|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Index.LocalIndex, io.github.charlietap.chasm.type/ValueType) // io.github.charlietap.chasm.ast.module/Local.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.LocalIndex;io.github.charlietap.chasm.type.ValueType){}[0]

    final val idx // io.github.charlietap.chasm.ast.module/Local.idx|{}idx[0]
        final fun <get-idx>(): io.github.charlietap.chasm.ast.module/Index.LocalIndex // io.github.charlietap.chasm.ast.module/Local.idx.<get-idx>|<get-idx>(){}[0]
    final val type // io.github.charlietap.chasm.ast.module/Local.type|{}type[0]
        final fun <get-type>(): io.github.charlietap.chasm.type/ValueType // io.github.charlietap.chasm.ast.module/Local.type.<get-type>|<get-type>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.module/Index.LocalIndex // io.github.charlietap.chasm.ast.module/Local.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.type/ValueType // io.github.charlietap.chasm.ast.module/Local.component2|component2(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.module/Index.LocalIndex = ..., io.github.charlietap.chasm.type/ValueType = ...): io.github.charlietap.chasm.ast.module/Local // io.github.charlietap.chasm.ast.module/Local.copy|copy(io.github.charlietap.chasm.ast.module.Index.LocalIndex;io.github.charlietap.chasm.type.ValueType){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Local.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Local.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Local.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/LocalNameSubsection : io.github.charlietap.chasm.ast.module/NameSubsection { // io.github.charlietap.chasm.ast.module/LocalNameSubsection|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation>) // io.github.charlietap.chasm.ast.module/LocalNameSubsection.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.IndirectNameAssociation>){}[0]

    final val indirectNameMap // io.github.charlietap.chasm.ast.module/LocalNameSubsection.indirectNameMap|{}indirectNameMap[0]
        final fun <get-indirectNameMap>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation> // io.github.charlietap.chasm.ast.module/LocalNameSubsection.indirectNameMap.<get-indirectNameMap>|<get-indirectNameMap>(){}[0]

    final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation> // io.github.charlietap.chasm.ast.module/LocalNameSubsection.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/IndirectNameAssociation> = ...): io.github.charlietap.chasm.ast.module/LocalNameSubsection // io.github.charlietap.chasm.ast.module/LocalNameSubsection.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.IndirectNameAssociation>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/LocalNameSubsection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/LocalNameSubsection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/LocalNameSubsection.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/Memory { // io.github.charlietap.chasm.ast.module/Memory|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Index.MemoryIndex, io.github.charlietap.chasm.type/MemoryType) // io.github.charlietap.chasm.ast.module/Memory.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.type.MemoryType){}[0]

    final val idx // io.github.charlietap.chasm.ast.module/Memory.idx|{}idx[0]
        final fun <get-idx>(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.module/Memory.idx.<get-idx>|<get-idx>(){}[0]
    final val type // io.github.charlietap.chasm.ast.module/Memory.type|{}type[0]
        final fun <get-type>(): io.github.charlietap.chasm.type/MemoryType // io.github.charlietap.chasm.ast.module/Memory.type.<get-type>|<get-type>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.module/Index.MemoryIndex // io.github.charlietap.chasm.ast.module/Memory.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.type/MemoryType // io.github.charlietap.chasm.ast.module/Memory.component2|component2(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.module/Index.MemoryIndex = ..., io.github.charlietap.chasm.type/MemoryType = ...): io.github.charlietap.chasm.ast.module/Memory // io.github.charlietap.chasm.ast.module/Memory.copy|copy(io.github.charlietap.chasm.ast.module.Index.MemoryIndex;io.github.charlietap.chasm.type.MemoryType){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Memory.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Memory.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Memory.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/MemoryNameSubsection : io.github.charlietap.chasm.ast.module/NameSubsection { // io.github.charlietap.chasm.ast.module/MemoryNameSubsection|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation>) // io.github.charlietap.chasm.ast.module/MemoryNameSubsection.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]

    final val nameMap // io.github.charlietap.chasm.ast.module/MemoryNameSubsection.nameMap|{}nameMap[0]
        final fun <get-nameMap>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/MemoryNameSubsection.nameMap.<get-nameMap>|<get-nameMap>(){}[0]

    final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/MemoryNameSubsection.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> = ...): io.github.charlietap.chasm.ast.module/MemoryNameSubsection // io.github.charlietap.chasm.ast.module/MemoryNameSubsection.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/MemoryNameSubsection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/MemoryNameSubsection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/MemoryNameSubsection.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/Module { // io.github.charlietap.chasm.ast.module/Module|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Version, kotlin.collections/List<io.github.charlietap.chasm.ast.module/Type>, kotlin.collections/List<io.github.charlietap.chasm.type/DefinedType>, kotlin.collections/List<io.github.charlietap.chasm.ast.module/Import>, kotlin.collections/List<io.github.charlietap.chasm.ast.module/Function>, kotlin.collections/List<io.github.charlietap.chasm.ast.module/Table>, kotlin.collections/List<io.github.charlietap.chasm.ast.module/Memory>, kotlin.collections/List<io.github.charlietap.chasm.ast.module/Tag>, kotlin.collections/List<io.github.charlietap.chasm.ast.module/Global>, kotlin.collections/List<io.github.charlietap.chasm.ast.module/Export>, io.github.charlietap.chasm.ast.module/StartFunction?, kotlin.collections/List<io.github.charlietap.chasm.ast.module/ElementSegment>, kotlin.collections/List<io.github.charlietap.chasm.ast.module/DataSegment>, kotlin.collections/List<io.github.charlietap.chasm.ast.module/Custom>) // io.github.charlietap.chasm.ast.module/Module.<init>|<init>(io.github.charlietap.chasm.ast.module.Version;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Type>;kotlin.collections.List<io.github.charlietap.chasm.type.DefinedType>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Import>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Function>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Table>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Memory>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Tag>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Global>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Export>;io.github.charlietap.chasm.ast.module.StartFunction?;kotlin.collections.List<io.github.charlietap.chasm.ast.module.ElementSegment>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.DataSegment>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Custom>){}[0]

    final val customs // io.github.charlietap.chasm.ast.module/Module.customs|{}customs[0]
        final fun <get-customs>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Custom> // io.github.charlietap.chasm.ast.module/Module.customs.<get-customs>|<get-customs>(){}[0]
    final val dataSegments // io.github.charlietap.chasm.ast.module/Module.dataSegments|{}dataSegments[0]
        final fun <get-dataSegments>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/DataSegment> // io.github.charlietap.chasm.ast.module/Module.dataSegments.<get-dataSegments>|<get-dataSegments>(){}[0]
    final val definedTypes // io.github.charlietap.chasm.ast.module/Module.definedTypes|{}definedTypes[0]
        final fun <get-definedTypes>(): kotlin.collections/List<io.github.charlietap.chasm.type/DefinedType> // io.github.charlietap.chasm.ast.module/Module.definedTypes.<get-definedTypes>|<get-definedTypes>(){}[0]
    final val elementSegments // io.github.charlietap.chasm.ast.module/Module.elementSegments|{}elementSegments[0]
        final fun <get-elementSegments>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/ElementSegment> // io.github.charlietap.chasm.ast.module/Module.elementSegments.<get-elementSegments>|<get-elementSegments>(){}[0]
    final val exports // io.github.charlietap.chasm.ast.module/Module.exports|{}exports[0]
        final fun <get-exports>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Export> // io.github.charlietap.chasm.ast.module/Module.exports.<get-exports>|<get-exports>(){}[0]
    final val functions // io.github.charlietap.chasm.ast.module/Module.functions|{}functions[0]
        final fun <get-functions>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Function> // io.github.charlietap.chasm.ast.module/Module.functions.<get-functions>|<get-functions>(){}[0]
    final val globals // io.github.charlietap.chasm.ast.module/Module.globals|{}globals[0]
        final fun <get-globals>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Global> // io.github.charlietap.chasm.ast.module/Module.globals.<get-globals>|<get-globals>(){}[0]
    final val imports // io.github.charlietap.chasm.ast.module/Module.imports|{}imports[0]
        final fun <get-imports>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Import> // io.github.charlietap.chasm.ast.module/Module.imports.<get-imports>|<get-imports>(){}[0]
    final val memories // io.github.charlietap.chasm.ast.module/Module.memories|{}memories[0]
        final fun <get-memories>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Memory> // io.github.charlietap.chasm.ast.module/Module.memories.<get-memories>|<get-memories>(){}[0]
    final val startFunction // io.github.charlietap.chasm.ast.module/Module.startFunction|{}startFunction[0]
        final fun <get-startFunction>(): io.github.charlietap.chasm.ast.module/StartFunction? // io.github.charlietap.chasm.ast.module/Module.startFunction.<get-startFunction>|<get-startFunction>(){}[0]
    final val tables // io.github.charlietap.chasm.ast.module/Module.tables|{}tables[0]
        final fun <get-tables>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Table> // io.github.charlietap.chasm.ast.module/Module.tables.<get-tables>|<get-tables>(){}[0]
    final val tags // io.github.charlietap.chasm.ast.module/Module.tags|{}tags[0]
        final fun <get-tags>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Tag> // io.github.charlietap.chasm.ast.module/Module.tags.<get-tags>|<get-tags>(){}[0]
    final val types // io.github.charlietap.chasm.ast.module/Module.types|{}types[0]
        final fun <get-types>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Type> // io.github.charlietap.chasm.ast.module/Module.types.<get-types>|<get-types>(){}[0]
    final val version // io.github.charlietap.chasm.ast.module/Module.version|{}version[0]
        final fun <get-version>(): io.github.charlietap.chasm.ast.module/Version // io.github.charlietap.chasm.ast.module/Module.version.<get-version>|<get-version>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.module/Version // io.github.charlietap.chasm.ast.module/Module.component1|component1(){}[0]
    final fun component10(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Export> // io.github.charlietap.chasm.ast.module/Module.component10|component10(){}[0]
    final fun component11(): io.github.charlietap.chasm.ast.module/StartFunction? // io.github.charlietap.chasm.ast.module/Module.component11|component11(){}[0]
    final fun component12(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/ElementSegment> // io.github.charlietap.chasm.ast.module/Module.component12|component12(){}[0]
    final fun component13(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/DataSegment> // io.github.charlietap.chasm.ast.module/Module.component13|component13(){}[0]
    final fun component14(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Custom> // io.github.charlietap.chasm.ast.module/Module.component14|component14(){}[0]
    final fun component2(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Type> // io.github.charlietap.chasm.ast.module/Module.component2|component2(){}[0]
    final fun component3(): kotlin.collections/List<io.github.charlietap.chasm.type/DefinedType> // io.github.charlietap.chasm.ast.module/Module.component3|component3(){}[0]
    final fun component4(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Import> // io.github.charlietap.chasm.ast.module/Module.component4|component4(){}[0]
    final fun component5(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Function> // io.github.charlietap.chasm.ast.module/Module.component5|component5(){}[0]
    final fun component6(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Table> // io.github.charlietap.chasm.ast.module/Module.component6|component6(){}[0]
    final fun component7(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Memory> // io.github.charlietap.chasm.ast.module/Module.component7|component7(){}[0]
    final fun component8(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Tag> // io.github.charlietap.chasm.ast.module/Module.component8|component8(){}[0]
    final fun component9(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/Global> // io.github.charlietap.chasm.ast.module/Module.component9|component9(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.module/Version = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/Type> = ..., kotlin.collections/List<io.github.charlietap.chasm.type/DefinedType> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/Import> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/Function> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/Table> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/Memory> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/Tag> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/Global> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/Export> = ..., io.github.charlietap.chasm.ast.module/StartFunction? = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/ElementSegment> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/DataSegment> = ..., kotlin.collections/List<io.github.charlietap.chasm.ast.module/Custom> = ...): io.github.charlietap.chasm.ast.module/Module // io.github.charlietap.chasm.ast.module/Module.copy|copy(io.github.charlietap.chasm.ast.module.Version;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Type>;kotlin.collections.List<io.github.charlietap.chasm.type.DefinedType>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Import>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Function>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Table>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Memory>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Tag>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Global>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Export>;io.github.charlietap.chasm.ast.module.StartFunction?;kotlin.collections.List<io.github.charlietap.chasm.ast.module.ElementSegment>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.DataSegment>;kotlin.collections.List<io.github.charlietap.chasm.ast.module.Custom>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Module.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Module.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Module.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/ModuleNameSubsection : io.github.charlietap.chasm.ast.module/NameSubsection { // io.github.charlietap.chasm.ast.module/ModuleNameSubsection|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.value/NameValue) // io.github.charlietap.chasm.ast.module/ModuleNameSubsection.<init>|<init>(io.github.charlietap.chasm.ast.value.NameValue){}[0]

    final val name // io.github.charlietap.chasm.ast.module/ModuleNameSubsection.name|{}name[0]
        final fun <get-name>(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/ModuleNameSubsection.name.<get-name>|<get-name>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/ModuleNameSubsection.component1|component1(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.value/NameValue = ...): io.github.charlietap.chasm.ast.module/ModuleNameSubsection // io.github.charlietap.chasm.ast.module/ModuleNameSubsection.copy|copy(io.github.charlietap.chasm.ast.value.NameValue){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/ModuleNameSubsection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/ModuleNameSubsection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/ModuleNameSubsection.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/NameAssociation { // io.github.charlietap.chasm.ast.module/NameAssociation|null[0]
    constructor <init>(kotlin/UInt, io.github.charlietap.chasm.ast.value/NameValue) // io.github.charlietap.chasm.ast.module/NameAssociation.<init>|<init>(kotlin.UInt;io.github.charlietap.chasm.ast.value.NameValue){}[0]

    final val idx // io.github.charlietap.chasm.ast.module/NameAssociation.idx|{}idx[0]
        final fun <get-idx>(): kotlin/UInt // io.github.charlietap.chasm.ast.module/NameAssociation.idx.<get-idx>|<get-idx>(){}[0]
    final val name // io.github.charlietap.chasm.ast.module/NameAssociation.name|{}name[0]
        final fun <get-name>(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/NameAssociation.name.<get-name>|<get-name>(){}[0]

    final fun component1(): kotlin/UInt // io.github.charlietap.chasm.ast.module/NameAssociation.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/NameAssociation.component2|component2(){}[0]
    final fun copy(kotlin/UInt = ..., io.github.charlietap.chasm.ast.value/NameValue = ...): io.github.charlietap.chasm.ast.module/NameAssociation // io.github.charlietap.chasm.ast.module/NameAssociation.copy|copy(kotlin.UInt;io.github.charlietap.chasm.ast.value.NameValue){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/NameAssociation.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/NameAssociation.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/NameAssociation.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/NameData : io.github.charlietap.chasm.ast.module/Custom { // io.github.charlietap.chasm.ast.module/NameData|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameSubsection>) // io.github.charlietap.chasm.ast.module/NameData.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameSubsection>){}[0]

    final val subsections // io.github.charlietap.chasm.ast.module/NameData.subsections|{}subsections[0]
        final fun <get-subsections>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameSubsection> // io.github.charlietap.chasm.ast.module/NameData.subsections.<get-subsections>|<get-subsections>(){}[0]

    final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameSubsection> // io.github.charlietap.chasm.ast.module/NameData.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameSubsection> = ...): io.github.charlietap.chasm.ast.module/NameData // io.github.charlietap.chasm.ast.module/NameData.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameSubsection>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/NameData.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/NameData.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/NameData.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/Table { // io.github.charlietap.chasm.ast.module/Table|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Index.TableIndex, io.github.charlietap.chasm.type/TableType, io.github.charlietap.chasm.ast.instruction/Expression) // io.github.charlietap.chasm.ast.module/Table.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TableIndex;io.github.charlietap.chasm.type.TableType;io.github.charlietap.chasm.ast.instruction.Expression){}[0]

    final val idx // io.github.charlietap.chasm.ast.module/Table.idx|{}idx[0]
        final fun <get-idx>(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.module/Table.idx.<get-idx>|<get-idx>(){}[0]
    final val initExpression // io.github.charlietap.chasm.ast.module/Table.initExpression|{}initExpression[0]
        final fun <get-initExpression>(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.module/Table.initExpression.<get-initExpression>|<get-initExpression>(){}[0]
    final val type // io.github.charlietap.chasm.ast.module/Table.type|{}type[0]
        final fun <get-type>(): io.github.charlietap.chasm.type/TableType // io.github.charlietap.chasm.ast.module/Table.type.<get-type>|<get-type>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.module/Index.TableIndex // io.github.charlietap.chasm.ast.module/Table.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.type/TableType // io.github.charlietap.chasm.ast.module/Table.component2|component2(){}[0]
    final fun component3(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.module/Table.component3|component3(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.module/Index.TableIndex = ..., io.github.charlietap.chasm.type/TableType = ..., io.github.charlietap.chasm.ast.instruction/Expression = ...): io.github.charlietap.chasm.ast.module/Table // io.github.charlietap.chasm.ast.module/Table.copy|copy(io.github.charlietap.chasm.ast.module.Index.TableIndex;io.github.charlietap.chasm.type.TableType;io.github.charlietap.chasm.ast.instruction.Expression){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Table.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Table.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Table.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/TableNameSubsection : io.github.charlietap.chasm.ast.module/NameSubsection { // io.github.charlietap.chasm.ast.module/TableNameSubsection|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation>) // io.github.charlietap.chasm.ast.module/TableNameSubsection.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]

    final val nameMap // io.github.charlietap.chasm.ast.module/TableNameSubsection.nameMap|{}nameMap[0]
        final fun <get-nameMap>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/TableNameSubsection.nameMap.<get-nameMap>|<get-nameMap>(){}[0]

    final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/TableNameSubsection.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> = ...): io.github.charlietap.chasm.ast.module/TableNameSubsection // io.github.charlietap.chasm.ast.module/TableNameSubsection.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/TableNameSubsection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/TableNameSubsection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/TableNameSubsection.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/Tag { // io.github.charlietap.chasm.ast.module/Tag|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Index.TagIndex, io.github.charlietap.chasm.type/TagType) // io.github.charlietap.chasm.ast.module/Tag.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TagIndex;io.github.charlietap.chasm.type.TagType){}[0]

    final val index // io.github.charlietap.chasm.ast.module/Tag.index|{}index[0]
        final fun <get-index>(): io.github.charlietap.chasm.ast.module/Index.TagIndex // io.github.charlietap.chasm.ast.module/Tag.index.<get-index>|<get-index>(){}[0]
    final val type // io.github.charlietap.chasm.ast.module/Tag.type|{}type[0]
        final fun <get-type>(): io.github.charlietap.chasm.type/TagType // io.github.charlietap.chasm.ast.module/Tag.type.<get-type>|<get-type>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.module/Index.TagIndex // io.github.charlietap.chasm.ast.module/Tag.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.type/TagType // io.github.charlietap.chasm.ast.module/Tag.component2|component2(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.module/Index.TagIndex = ..., io.github.charlietap.chasm.type/TagType = ...): io.github.charlietap.chasm.ast.module/Tag // io.github.charlietap.chasm.ast.module/Tag.copy|copy(io.github.charlietap.chasm.ast.module.Index.TagIndex;io.github.charlietap.chasm.type.TagType){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Tag.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Tag.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Tag.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/TagNameSubsection : io.github.charlietap.chasm.ast.module/NameSubsection { // io.github.charlietap.chasm.ast.module/TagNameSubsection|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation>) // io.github.charlietap.chasm.ast.module/TagNameSubsection.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]

    final val nameMap // io.github.charlietap.chasm.ast.module/TagNameSubsection.nameMap|{}nameMap[0]
        final fun <get-nameMap>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/TagNameSubsection.nameMap.<get-nameMap>|<get-nameMap>(){}[0]

    final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/TagNameSubsection.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> = ...): io.github.charlietap.chasm.ast.module/TagNameSubsection // io.github.charlietap.chasm.ast.module/TagNameSubsection.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/TagNameSubsection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/TagNameSubsection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/TagNameSubsection.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/Type { // io.github.charlietap.chasm.ast.module/Type|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Index.TypeIndex, io.github.charlietap.chasm.type/RecursiveType) // io.github.charlietap.chasm.ast.module/Type.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.type.RecursiveType){}[0]

    final val idx // io.github.charlietap.chasm.ast.module/Type.idx|{}idx[0]
        final fun <get-idx>(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.module/Type.idx.<get-idx>|<get-idx>(){}[0]
    final val recursiveType // io.github.charlietap.chasm.ast.module/Type.recursiveType|{}recursiveType[0]
        final fun <get-recursiveType>(): io.github.charlietap.chasm.type/RecursiveType // io.github.charlietap.chasm.ast.module/Type.recursiveType.<get-recursiveType>|<get-recursiveType>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.module/Index.TypeIndex // io.github.charlietap.chasm.ast.module/Type.component1|component1(){}[0]
    final fun component2(): io.github.charlietap.chasm.type/RecursiveType // io.github.charlietap.chasm.ast.module/Type.component2|component2(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.module/Index.TypeIndex = ..., io.github.charlietap.chasm.type/RecursiveType = ...): io.github.charlietap.chasm.ast.module/Type // io.github.charlietap.chasm.ast.module/Type.copy|copy(io.github.charlietap.chasm.ast.module.Index.TypeIndex;io.github.charlietap.chasm.type.RecursiveType){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Type.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Type.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Type.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/TypeNameSubsection : io.github.charlietap.chasm.ast.module/NameSubsection { // io.github.charlietap.chasm.ast.module/TypeNameSubsection|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation>) // io.github.charlietap.chasm.ast.module/TypeNameSubsection.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]

    final val nameMap // io.github.charlietap.chasm.ast.module/TypeNameSubsection.nameMap|{}nameMap[0]
        final fun <get-nameMap>(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/TypeNameSubsection.nameMap.<get-nameMap>|<get-nameMap>(){}[0]

    final fun component1(): kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> // io.github.charlietap.chasm.ast.module/TypeNameSubsection.component1|component1(){}[0]
    final fun copy(kotlin.collections/List<io.github.charlietap.chasm.ast.module/NameAssociation> = ...): io.github.charlietap.chasm.ast.module/TypeNameSubsection // io.github.charlietap.chasm.ast.module/TypeNameSubsection.copy|copy(kotlin.collections.List<io.github.charlietap.chasm.ast.module.NameAssociation>){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/TypeNameSubsection.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/TypeNameSubsection.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/TypeNameSubsection.toString|toString(){}[0]
}

final class io.github.charlietap.chasm.ast.module/Uninterpreted : io.github.charlietap.chasm.ast.module/Custom { // io.github.charlietap.chasm.ast.module/Uninterpreted|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.value/NameValue, kotlin/UByteArray) // io.github.charlietap.chasm.ast.module/Uninterpreted.<init>|<init>(io.github.charlietap.chasm.ast.value.NameValue;kotlin.UByteArray){}[0]

    final val data // io.github.charlietap.chasm.ast.module/Uninterpreted.data|{}data[0]
        final fun <get-data>(): kotlin/UByteArray // io.github.charlietap.chasm.ast.module/Uninterpreted.data.<get-data>|<get-data>(){}[0]
    final val name // io.github.charlietap.chasm.ast.module/Uninterpreted.name|{}name[0]
        final fun <get-name>(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/Uninterpreted.name.<get-name>|<get-name>(){}[0]

    final fun component1(): io.github.charlietap.chasm.ast.value/NameValue // io.github.charlietap.chasm.ast.module/Uninterpreted.component1|component1(){}[0]
    final fun component2(): kotlin/UByteArray // io.github.charlietap.chasm.ast.module/Uninterpreted.component2|component2(){}[0]
    final fun copy(io.github.charlietap.chasm.ast.value/NameValue = ..., kotlin/UByteArray = ...): io.github.charlietap.chasm.ast.module/Uninterpreted // io.github.charlietap.chasm.ast.module/Uninterpreted.copy|copy(io.github.charlietap.chasm.ast.value.NameValue;kotlin.UByteArray){}[0]
    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/Uninterpreted.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/Uninterpreted.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/Uninterpreted.toString|toString(){}[0]
}

final value class io.github.charlietap.chasm.ast.instruction/Expression { // io.github.charlietap.chasm.ast.instruction/Expression|null[0]
    constructor <init>(kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction>) // io.github.charlietap.chasm.ast.instruction/Expression.<init>|<init>(kotlin.collections.List<io.github.charlietap.chasm.ast.instruction.Instruction>){}[0]
    constructor <init>(kotlin/Array<out io.github.charlietap.chasm.ast.instruction/Instruction>...) // io.github.charlietap.chasm.ast.instruction/Expression.<init>|<init>(kotlin.Array<out|io.github.charlietap.chasm.ast.instruction.Instruction>...){}[0]

    final val instructions // io.github.charlietap.chasm.ast.instruction/Expression.instructions|{}instructions[0]
        final fun <get-instructions>(): kotlin.collections/List<io.github.charlietap.chasm.ast.instruction/Instruction> // io.github.charlietap.chasm.ast.instruction/Expression.instructions.<get-instructions>|<get-instructions>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.instruction/Expression.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.instruction/Expression.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.instruction/Expression.toString|toString(){}[0]

    final object Companion { // io.github.charlietap.chasm.ast.instruction/Expression.Companion|null[0]
        final val EMPTY // io.github.charlietap.chasm.ast.instruction/Expression.Companion.EMPTY|{}EMPTY[0]
            final fun <get-EMPTY>(): io.github.charlietap.chasm.ast.instruction/Expression // io.github.charlietap.chasm.ast.instruction/Expression.Companion.EMPTY.<get-EMPTY>|<get-EMPTY>(){}[0]
    }
}

final value class io.github.charlietap.chasm.ast.module/StartFunction { // io.github.charlietap.chasm.ast.module/StartFunction|null[0]
    constructor <init>(io.github.charlietap.chasm.ast.module/Index.FunctionIndex) // io.github.charlietap.chasm.ast.module/StartFunction.<init>|<init>(io.github.charlietap.chasm.ast.module.Index.FunctionIndex){}[0]

    final val idx // io.github.charlietap.chasm.ast.module/StartFunction.idx|{}idx[0]
        final fun <get-idx>(): io.github.charlietap.chasm.ast.module/Index.FunctionIndex // io.github.charlietap.chasm.ast.module/StartFunction.idx.<get-idx>|<get-idx>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.module/StartFunction.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.module/StartFunction.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.module/StartFunction.toString|toString(){}[0]
}

final value class io.github.charlietap.chasm.ast.value/NameValue : io.github.charlietap.chasm.ast.value/Value { // io.github.charlietap.chasm.ast.value/NameValue|null[0]
    constructor <init>(kotlin/String) // io.github.charlietap.chasm.ast.value/NameValue.<init>|<init>(kotlin.String){}[0]

    final val name // io.github.charlietap.chasm.ast.value/NameValue.name|{}name[0]
        final fun <get-name>(): kotlin/String // io.github.charlietap.chasm.ast.value/NameValue.name.<get-name>|<get-name>(){}[0]

    final fun equals(kotlin/Any?): kotlin/Boolean // io.github.charlietap.chasm.ast.value/NameValue.equals|equals(kotlin.Any?){}[0]
    final fun hashCode(): kotlin/Int // io.github.charlietap.chasm.ast.value/NameValue.hashCode|hashCode(){}[0]
    final fun toString(): kotlin/String // io.github.charlietap.chasm.ast.value/NameValue.toString|toString(){}[0]
}
